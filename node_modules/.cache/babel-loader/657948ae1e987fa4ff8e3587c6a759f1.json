{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/Crossword/Crossword.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Crossword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.crossword.id,\n      title: this.props.crossword.title,\n      date: this.props.crossword.date,\n      difficulty: this.props.crossword.difficulty,\n      numbered: this.props.crossword.numbered,\n      grid: this.props.crossword.grid,\n      acrossClues: this.props.crossword.acrossClues,\n      downClues: this.props.crossword.downClues,\n      clueRefMap: this.props.crossword.clueRefMap\n    };\n  }\n\n  componentWillMount() {}\n\n  render() {\n    const {\n      id,\n      title,\n      date,\n      difficulty,\n      numbered,\n      grid,\n      acrossClues,\n      downClues,\n      clueRefMap\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, id, \" \", title, \" \", date, \" \", difficulty), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, numbered));\n  }\n\n}\n\nCrossword.propTypes = {\n  api: PropTypes.func.isRequired,\n  crossword: PropTypes.object.isRequired\n};\nexport default Crossword;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/Crossword/Crossword.jsx"],"names":["React","Fragment","Component","PropTypes","Crossword","constructor","props","state","id","crossword","title","date","difficulty","numbered","grid","acrossClues","downClues","clueRefMap","componentWillMount","render","propTypes","api","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,SAAX,CAAqBD,EADhB;AAETE,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,SAAX,CAAqBC,KAFnB;AAGTC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWG,SAAX,CAAqBE,IAHlB;AAITC,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWG,SAAX,CAAqBG,UAJxB;AAKTC,MAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWG,SAAX,CAAqBI,QALtB;AAMTC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWG,SAAX,CAAqBK,IANlB;AAOTC,MAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWG,SAAX,CAAqBM,WAPzB;AAQTC,MAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWG,SAAX,CAAqBO,SARvB;AASTC,MAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWG,SAAX,CAAqBQ;AATxB,KAAb;AAYH;;AAEDC,EAAAA,kBAAkB,GAAI,CAAE;;AAExBC,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEX,MAAAA,EAAF;AAAME,MAAAA,KAAN;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,UAAnB;AAA+BC,MAAAA,QAA/B;AAAyCC,MAAAA,IAAzC;AAA+CC,MAAAA,WAA/C;AAA4DC,MAAAA,SAA5D;AAAuEC,MAAAA;AAAvE,QAAsF,KAAKV,KAAjG;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,EAAN,OAAWE,KAAX,OAAmBC,IAAnB,OAA0BC,UAA1B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,QAAN,CAFJ,CADJ;AAMH;;AA5B6B;;AA+BlCT,SAAS,CAACgB,SAAV,GAAsB;AAClBC,EAAAA,GAAG,EAAElB,SAAS,CAACmB,IAAV,CAAeC,UADF;AAElBd,EAAAA,SAAS,EAAEN,SAAS,CAACqB,MAAV,CAAiBD;AAFV,CAAtB;AAKA,eAAenB,SAAf","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Crossword extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            id: this.props.crossword.id,\n            title: this.props.crossword.title,\n            date: this.props.crossword.date,\n            difficulty: this.props.crossword.difficulty,\n            numbered: this.props.crossword.numbered,\n            grid: this.props.crossword.grid,\n            acrossClues: this.props.crossword.acrossClues,\n            downClues: this.props.crossword.downClues,\n            clueRefMap: this.props.crossword.clueRefMap\n        }\n\n    }\n\n    componentWillMount () {}\n\n    render () {\n        const { id, title, date, difficulty, numbered, grid, acrossClues, downClues, clueRefMap } = this.state\n        return (\n            <Fragment>\n                <div>{id} {title} {date} {difficulty}</div>\n                <div>{numbered}</div>\n            </Fragment>\n        )\n    }\n}\n\nCrossword.propTypes = {\n    api: PropTypes.func.isRequired,\n    crossword: PropTypes.object.isRequired\n}\n\nexport default Crossword"]},"metadata":{},"sourceType":"module"}