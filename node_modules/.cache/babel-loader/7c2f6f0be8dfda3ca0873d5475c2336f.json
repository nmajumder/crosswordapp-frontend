{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordBoardApp/CrosswordBoardApp.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CrosswordBoardApp.css';\n\nclass CrosswordBoardApp extends Component {\n  constructor(props) {\n    super(props);\n    let currentSelection = {\n      \"coords\": [0, 0],\n      \"direction\": \"Across\"\n    };\n    let i = 0;\n\n    while (this.props.crossword.numbered[0][i] === \"_\") {\n      i++;\n    }\n\n    currentSelection[\"coords\"] = [0, i];\n    this.state = {\n      windowWidth: window.innerWidth,\n      currentSelection: currentSelection,\n      id: this.props.crossword.id,\n      numbered: this.props.crossword.numbered,\n      grid: this.props.crossword.grid,\n      acrossClues: this.props.crossword.acrossClues.sort((c1, c2) => c1.number > c2.number ? 1 : -1),\n      downClues: this.props.crossword.downClues.sort((c1, c2) => c1.number > c2.number ? 1 : -1),\n      clueRefMap: this.props.crossword.clueRefMap\n    };\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.clueRowClicked = this.clueRowClicked.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"Crossword Board App is Mounting...\");\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Crossword Board App is Unmounting...\");\n    window.removeEventListener('resize', this.handleWindowResize); // save state of grid\n  }\n\n  handleWindowResize() {\n    this.setState({\n      windowWidth: window.innerWidth\n    });\n  }\n\n  clueRowClicked(index, listType) {\n    if (listType === \"Across\") {\n      console.log('Clicked across clue with number: ' + this.state.acrossClues[index].number);\n    } else {\n      console.log('Clicked down clue with number: ' + this.state.downClues[index].number);\n    }\n  }\n\n  render() {\n    const {\n      windowWidth,\n      id,\n      numbered,\n      grid,\n      acrossClues,\n      downClues,\n      clueRefMap\n    } = this.state;\n    let clueWidthPx = \"\" + (windowWidth - 790 - 2) + \"px\";\n    const boardPx = this.props.boardWidthPx;\n    const boardSize = grid.length;\n    const rowPx = boardPx / boardSize;\n    const squarePx = rowPx - 1;\n    const highlightColors = [\"#ffda00\", \"#a7d8ff\"];\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board-and-clues-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board\",\n      style: {\n        width: boardPx,\n        height: boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, grid.map(row => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: rowPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, row.map(square => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-square\",\n      style: {\n        width: squarePx,\n        height: squarePx,\n        backgroundColor: `${square.value === \"_\" ? \"black\" : \"white\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, square.value === '?' || square.value === '_' ? '' : square.value))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-section\",\n      style: {\n        width: clueWidthPx,\n        height: boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Across\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, acrossClues.map(clue => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row\",\n      onClick: () => {\n        this.clueRowClicked(acrossClues.findIndex(other => other.number === clue.number), \"Across\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, clue.number), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, clue.text))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"Down\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, downClues.map(clue => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row\",\n      onClick: () => {\n        this.clueRowClicked(downClues.findIndex(other => other.number === clue.number), \"Down\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, clue.number), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, clue.text))))))));\n  }\n\n}\n\nCrosswordBoardApp.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  boardWidthPx: PropTypes.number.isRequired\n};\nexport default CrosswordBoardApp;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordBoardApp/CrosswordBoardApp.jsx"],"names":["React","Fragment","Component","PropTypes","CrosswordBoardApp","constructor","props","currentSelection","i","crossword","numbered","state","windowWidth","window","innerWidth","id","grid","acrossClues","sort","c1","c2","number","downClues","clueRefMap","handleWindowResize","bind","clueRowClicked","componentDidMount","console","log","addEventListener","componentWillUnmount","removeEventListener","setState","index","listType","render","clueWidthPx","boardPx","boardWidthPx","boardSize","length","rowPx","squarePx","highlightColors","width","height","map","row","square","backgroundColor","value","clue","findIndex","other","text","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './CrosswordBoardApp.css'\n\nclass CrosswordBoardApp extends Component {\n    constructor (props) {\n        super(props)\n\n        let currentSelection = {\n            \"coords\": [0,0],\n            \"direction\": \"Across\"\n        }\n        let i = 0\n        while (this.props.crossword.numbered[0][i] === \"_\") {\n            i++;\n        }\n        currentSelection[\"coords\"] = [0,i];\n\n        this.state = {\n            windowWidth: window.innerWidth,\n            currentSelection: currentSelection,\n            id: this.props.crossword.id,\n            numbered: this.props.crossword.numbered,\n            grid: this.props.crossword.grid,\n            acrossClues: this.props.crossword.acrossClues.sort((c1, c2) => (c1.number > c2.number) ? 1 : -1),\n            downClues: this.props.crossword.downClues.sort((c1, c2) => (c1.number > c2.number) ? 1 : -1),\n            clueRefMap: this.props.crossword.clueRefMap\n        }\n\n        this.handleWindowResize = this.handleWindowResize.bind(this)\n        this.clueRowClicked = this.clueRowClicked.bind(this)\n    }\n\n    componentDidMount () {\n        console.log(\"Crossword Board App is Mounting...\")\n        window.addEventListener('resize', this.handleWindowResize)\n\n    }\n\n    componentWillUnmount () {\n        console.log(\"Crossword Board App is Unmounting...\")\n        window.removeEventListener('resize', this.handleWindowResize)\n\n        // save state of grid\n    }\n\n    handleWindowResize () {\n        this.setState({\n            windowWidth: window.innerWidth\n        })\n    }\n\n    clueRowClicked (index, listType) {\n        if (listType === \"Across\") {\n            console.log('Clicked across clue with number: ' + this.state.acrossClues[index].number)\n        } else {\n            console.log('Clicked down clue with number: ' + this.state.downClues[index].number)\n        }\n    }\n\n    render () {\n        const { windowWidth, id, numbered, grid, acrossClues, downClues, clueRefMap } = this.state\n        let clueWidthPx = \"\" + (windowWidth - 790 - 2) + \"px\"\n\n        const boardPx = this.props.boardWidthPx\n        const boardSize = grid.length\n        const rowPx = boardPx / boardSize\n        const squarePx = rowPx - 1\n\n        const highlightColors = [\"#ffda00\", \"#a7d8ff\"]\n        return (\n            <Fragment>\n                <div className=\"crossword-board-and-clues-wrapper\">\n                    <div className=\"crossword-board\" style={{ width : boardPx, height : boardPx }}>\n                        {grid.map( row =>\n                            <div style={{height : rowPx}}>\n                                {row.map( square => \n                                    <div className={\"crossword-square\"}\n                                            style={{width : squarePx, height : squarePx, backgroundColor : `${square.value === \"_\" ? \"black\" : \"white\"}`}}>\n                                        {square.value === '?' || square.value === '_' ? '' : square.value}\n                                    </div>\n                                )}\n                            </div>\n\n                        )}\n                    </div>\n                    <div className=\"crossword-clue-section\" style={{width : clueWidthPx, height : boardPx}}>\n                        <div className=\"crossword-clue-list\">\n                            <div className=\"crossword-clue-list-title\">\n                                Across\n                            </div>\n                            <div className=\"crossword-clue-scroll\">\n                                {acrossClues.map( clue =>\n                                    <div className=\"crossword-clue-row\" \n                                        onClick={() => { this.clueRowClicked(acrossClues.findIndex(other => other.number === clue.number), \"Across\") }}>\n                                        <div className=\"crossword-clue-row-number\">{clue.number}</div>\n                                        <div className=\"crossword-clue-row-text\">{clue.text}</div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"crossword-clue-list\">\n                            <div className=\"crossword-clue-list-title\">\n                                Down\n                            </div>\n                            <div className=\"crossword-clue-scroll\">\n                                {downClues.map( clue =>\n                                    <div className=\"crossword-clue-row\"\n                                        onClick={() => { this.clueRowClicked(downClues.findIndex(other => other.number === clue.number), \"Down\") }}>\n                                        <div className=\"crossword-clue-row-number\">{clue.number}</div>\n                                        <div className=\"crossword-clue-row-text\">{clue.text}</div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordBoardApp.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    boardWidthPx: PropTypes.number.isRequired\n}\n\nexport default CrosswordBoardApp"]},"metadata":{},"sourceType":"module"}