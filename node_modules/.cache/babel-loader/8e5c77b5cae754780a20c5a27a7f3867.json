{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport './CrosswordPage.css';\nimport pause from '../../images/pause.png';\n\nclass CrosswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: window.innerHeight,\n      checkClicked: false,\n      revealClicked: false,\n      id: this.props.crossword.id,\n      title: this.props.crossword.title,\n      date: this.props.crossword.date,\n      difficulty: this.props.crossword.difficulty,\n      numbered: this.props.crossword.numbered,\n      grid: this.props.crossword.grid,\n      acrossClues: this.props.crossword.acrossClues,\n      downClues: this.props.crossword.downClues,\n      clueRefMap: this.props.crossword.clueRefMap\n    };\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.checkSquareClicked = this.checkSquareClicked.bind(this);\n    this.checkWordClicked = this.checkWordClicked.bind(this);\n    this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this);\n    this.revealSquareClicked = this.revealSquareClicked.bind(this);\n    this.revealWordClicked = this.revealWordClicked.bind(this);\n    this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this);\n    this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize); // save state of grid\n  }\n\n  handleWindowResize() {\n    this.setState({\n      windowWidth: window.innerHeight\n    });\n  }\n\n  checkSquareClicked() {\n    console.log(\"Checking a square\");\n  }\n\n  checkWordClicked() {\n    console.log(\"Checking a word\");\n  }\n\n  checkPuzzleClicked() {\n    console.log(\"Checking the puzzle\");\n  }\n\n  revealSquareClicked() {\n    console.log(\"Revealing a square\");\n  }\n\n  revealWordClicked() {\n    console.log(\"Revealing a word\");\n  }\n\n  revealPuzzleClicked() {\n    console.log(\"Revealing the puzzle\");\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      date,\n      difficulty,\n      numbered,\n      grid,\n      acrossClues,\n      downClues,\n      clueRefMap\n    } = this.state;\n    let screenWidth = window.innerWidth;\n    let clueWidth = \"\" + (screenWidth - 790 - 2) + \"px\";\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-back-button\",\n      onClick: () => {\n        this.props.backSelected();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, '<', \" Save progress and go back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"By Nathan Majumder\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer-pause\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"13:41\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"crossword-pause-button\",\n      src: pause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-check-and-reveal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-dropdown\",\n      title: \"Reveal\",\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-square\",\n      as: \"button\",\n      onClick: () => {\n        this.revealSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-word\",\n      as: \"button\",\n      onClick: () => {\n        this.revealWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-puzzle\",\n      as: \"button\",\n      onClick: () => {\n        this.revealPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-dropdown\",\n      title: \"Check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-square\",\n      as: \"button\",\n      onClick: () => {\n        this.checkSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-word\",\n      as: \"button\",\n      onClick: () => {\n        this.checkWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-puzzle\",\n      as: \"button\",\n      onClick: () => {\n        this.checkPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board-and-clues-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, grid.map(row => /*#__PURE__*/React.createElement(\"div\", {\n      className: grid.length === 15 ? \"crossword-row-15\" : \"crossword-row-21\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, row.map(square => /*#__PURE__*/React.createElement(\"div\", {\n      className: `crossword-square \n                                                ${square.value === '_' ? \"crossword-square-black \" : \"\"}\n                                                ${grid.length === 15 ? \"crossword-square-15\" : \"crossword-square-21\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, square.value === '?' || square.value === '_' ? '' : square.value))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-section\",\n      style: {\n        width: clueWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Across\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \"Down\"))))));\n  }\n\n}\n\nCrosswordPage.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  backSelected: PropTypes.func.isRequired\n};\nexport default CrosswordPage;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx"],"names":["React","Fragment","Component","Dropdown","DropdownButton","PropTypes","pause","CrosswordPage","constructor","props","state","windowWidth","window","innerHeight","checkClicked","revealClicked","id","crossword","title","date","difficulty","numbered","grid","acrossClues","downClues","clueRefMap","handleWindowResize","bind","checkSquareClicked","checkWordClicked","checkPuzzleClicked","revealSquareClicked","revealWordClicked","revealPuzzleClicked","toggleDropdownVisibility","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","setState","console","log","render","screenWidth","innerWidth","clueWidth","backSelected","isOpen","event","metadata","map","row","length","square","value","width","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport './CrosswordPage.css'\nimport pause from '../../images/pause.png'\n\nclass CrosswordPage extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            windowWidth: window.innerHeight,\n            checkClicked: false,\n            revealClicked: false,\n            id: this.props.crossword.id,\n            title: this.props.crossword.title,\n            date: this.props.crossword.date,\n            difficulty: this.props.crossword.difficulty,\n            numbered: this.props.crossword.numbered,\n            grid: this.props.crossword.grid,\n            acrossClues: this.props.crossword.acrossClues,\n            downClues: this.props.crossword.downClues,\n            clueRefMap: this.props.crossword.clueRefMap\n        }\n\n        this.handleWindowResize = this.handleWindowResize.bind(this)\n\n        this.checkSquareClicked = this.checkSquareClicked.bind(this)\n        this.checkWordClicked = this.checkWordClicked.bind(this)\n        this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this)\n\n        this.revealSquareClicked = this.revealSquareClicked.bind(this)\n        this.revealWordClicked = this.revealWordClicked.bind(this)\n        this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this)\n\n        this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this)\n    }\n\n    componentDidMount () {\n        window.addEventListener('resize', this.handleWindowResize)\n    }\n\n    componentWillUnmount () {\n        window.removeEventListener('resize', this.handleWindowResize)\n\n        // save state of grid\n    }\n\n    handleWindowResize () {\n        this.setState({\n            windowWidth: window.innerHeight\n        })\n    }\n\n    checkSquareClicked () {\n        console.log(\"Checking a square\")\n    }\n\n    checkWordClicked () {\n        console.log(\"Checking a word\")\n    }\n\n    checkPuzzleClicked () {\n        console.log(\"Checking the puzzle\")\n    }\n\n    revealSquareClicked () {\n        console.log(\"Revealing a square\")\n    }\n\n    revealWordClicked () {\n        console.log(\"Revealing a word\")\n    }\n\n    revealPuzzleClicked () {\n        console.log(\"Revealing the puzzle\")\n    }\n\n    render () {\n        const { id, title, date, difficulty, numbered, grid, acrossClues, downClues, clueRefMap } = this.state\n        let screenWidth = window.innerWidth\n        let clueWidth = \"\" + (screenWidth - 790 - 2) + \"px\"\n        return (\n            <Fragment>\n                <div className=\"crossword-page-wrapper\">\n                    <div className=\"crossword-page-back-button\" onClick={() => { this.props.backSelected() }}>\n                        {'<'} Save progress and go back\n                    </div>\n                    <div className=\"crossword-page-heading\">\n                        <div className=\"crossword-page-title\">{title}</div>\n                        <div className=\"crossword-page-author\">By Nathan Majumder</div>\n                    </div>\n                    <div className=\"crossword-page-controls\">\n                        <div className=\"crossword-timer-pause\">\n                            <div className=\"crossword-timer\">13:41</div><img className=\"crossword-pause-button\" src={pause}/>\n                        </div>\n                        <div className=\"crossword-check-and-reveal\">\n                            <DropdownButton id=\"crossword-dropdown\" title=\"Reveal\" \n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen) }}>\n                                <Dropdown.Item className=\"crossword-dropdown-square\" as=\"button\" onClick={() => { this.revealSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-word\" as=\"button\" onClick={() => { this.revealWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-puzzle\" as=\"button\" onClick={() => { this.revealPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                            <DropdownButton id=\"crossword-dropdown\" title=\"Check\">\n                                <Dropdown.Item className=\"crossword-dropdown-square\" as=\"button\" onClick={() => { this.checkSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-word\" as=\"button\" onClick={() => { this.checkWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-puzzle\" as=\"button\" onClick={() => { this.checkPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                    </div>\n                    <div className=\"crossword-board-and-clues-wrapper\">\n                        <div className=\"crossword-board\">\n                            {grid.map( row =>\n                                <div className={grid.length === 15 ? \"crossword-row-15\" : \"crossword-row-21\"}>\n                                    {row.map( square => \n                                        <div className={`crossword-square \n                                                ${square.value === '_' ? \"crossword-square-black \" : \"\"}\n                                                ${grid.length === 15 ? \"crossword-square-15\" : \"crossword-square-21\"}`}>\n                                            {square.value === '?' || square.value === '_' ? '' : square.value}\n                                        </div>\n                                    )}\n                                </div>\n\n                            )}\n                        </div>\n                        <div className=\"crossword-clue-section\" style={{width : clueWidth}}>\n                            <div className=\"crossword-clue-list\">\n                                <div className=\"crossword-clue-list-title\">\n                                    Across\n                                </div>\n                            </div>\n                            <div className=\"crossword-clue-list\">\n                                <div className=\"crossword-clue-list-title\">\n                                    Down\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordPage.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    backSelected: PropTypes.func.isRequired\n}\n\nexport default CrosswordPage"]},"metadata":{},"sourceType":"module"}