{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/SettingsModal/SettingsModal.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ColorScheme from '../../libs/ColorScheme.js';\nimport ColorSchemeList from '../../libs/ColorSchemeList.js';\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './SettingsModal.css';\nimport Settings from '../../libs/Settings.js';\n\nclass SettingsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedSettings: this.props.settings,\n      settings: this.props.settings\n    };\n    this.settingsRestored = this.settingsRestored.bind(this);\n    this.settingsHaveChanged = this.settingsHaveChanged.bind(this);\n    this.settingsAreDefault = this.settingsAreDefault.bind(this);\n  }\n\n  settingsRestored() {\n    this.setState({\n      settings: new Settings()\n    });\n  }\n\n  settingsHaveChanged() {\n    return !this.state.settings.isEqualTo(this.state.savedSettings);\n  }\n\n  settingsAreDefault() {\n    return this.state.settings.isDefault();\n  }\n\n  render() {\n    console.log(\"Should show modal? \" + this.props.shouldShow);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: `${this.props.shouldShow ? \"block\" : \"none\"}`\n      },\n      className: \"settings-modal-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"settings-modal-cancel\",\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Crossword Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, ColorSchemeList.colorSchemes.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-color-scheme-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, c.displayName, /*#__PURE__*/React.createElement(ColorSchemeRow, {\n      className: \"color-scheme-row-graphic\",\n      colorScheme: c,\n      width: 100,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        disabled: `${!this.settingsHaveChanged()}`\n      },\n      className: \"settings-save-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        disabled: `${this.settingsAreDefault()}`\n      },\n      className: \"settings-restore-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nSettingsModal.propTypes = {\n  shouldShow: PropTypes.bool.isRequired,\n  settings: PropTypes.object.isRequired,\n  settingsSaved: PropTypes.func.isRequired,\n  settingsBack: PropTypes.func.isRequired\n};\nexport default SettingsModal;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/SettingsModal/SettingsModal.jsx"],"names":["React","Fragment","Component","PropTypes","ColorScheme","ColorSchemeList","ColorSchemeRow","FontAwesomeIcon","faTimes","Settings","SettingsModal","constructor","props","state","savedSettings","settings","settingsRestored","bind","settingsHaveChanged","settingsAreDefault","setState","isEqualTo","isDefault","render","console","log","shouldShow","display","colorSchemes","map","c","i","displayName","disabled","propTypes","bool","isRequired","object","settingsSaved","func","settingsBack"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ColorScheme from '../../libs/ColorScheme.js'\nimport ColorSchemeList from '../../libs/ColorSchemeList.js'\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './SettingsModal.css'\nimport Settings from '../../libs/Settings.js'\n\nclass SettingsModal extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            savedSettings: this.props.settings,\n            settings: this.props.settings\n        }\n\n        this.settingsRestored = this.settingsRestored.bind(this)\n        this.settingsHaveChanged = this.settingsHaveChanged.bind(this)\n        this.settingsAreDefault = this.settingsAreDefault.bind(this)\n    }\n\n    settingsRestored () {\n        this.setState({\n            settings: new Settings()\n        })\n    }\n\n    settingsHaveChanged () {\n        return !this.state.settings.isEqualTo(this.state.savedSettings)\n    }\n\n    settingsAreDefault () {\n        return this.state.settings.isDefault()\n    }\n\n    render () {\n        console.log(\"Should show modal? \" + this.props.shouldShow)\n        return (\n            <div style={{display: `${this.props.shouldShow ? \"block\" : \"none\"}`}} className=\"settings-modal-wrapper\">\n                <FontAwesomeIcon className=\"settings-modal-cancel\" icon={faTimes} />\n                <div className=\"settings-modal-header\">Crossword Settings</div>\n                <div className=\"settings-modal-body\">\n                    {ColorSchemeList.colorSchemes.map( (c,i) =>\n                        <div className=\"settings-color-scheme-option\">{c.displayName}\n                            <ColorSchemeRow className=\"color-scheme-row-graphic\" colorScheme={c} width={100} height={30} />\n                        </div>\n                    )}\n                </div>\n                <div className=\"settings-modal-footer\">\n                    <button style={{disabled: `${!this.settingsHaveChanged()}`}} className=\"settings-save-button\"></button>\n                    <button style={{disabled: `${this.settingsAreDefault()}`}} className=\"settings-restore-button\"></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nSettingsModal.propTypes = {\n    shouldShow: PropTypes.bool.isRequired,\n    settings: PropTypes.object.isRequired,\n    settingsSaved: PropTypes.func.isRequired,\n    settingsBack: PropTypes.func.isRequired\n}\n\nexport default SettingsModal"]},"metadata":{},"sourceType":"module"}