{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordClueScroll.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport '../css/CrosswordBoardApp.css';\n\nclass CrosswordClueScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.onScroll = this.onScroll.bind(this);\n    this.getClueBackgroundColor = this.getClueBackgroundColor.bind(this);\n    this.getClueBorderColor = this.getClueBorderColor.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.topClue.current.scrollTop = this.props.scrollTop;\n  }\n\n  onScroll() {\n    this.props.handleScroll(ReactDOM.findDOMNode(this.refs.elem).scrollTop);\n  }\n\n  getClueBackgroundColor(clue) {\n    if (clue.number === this.props.selectedClue.number && this.props.isMatchingDirection) {\n      return this.props.settings.colorScheme.colors[2];\n    }\n\n    return \"white\";\n  }\n\n  getClueBorderColor(clue) {\n    if (clue.number === this.props.selectedClue.number) {\n      return this.props.settings.colorScheme.colors[2];\n    }\n\n    return \"white\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.props.listTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-scroll\",\n      onScroll: this.onScroll(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, this.props.clueList.map((clue, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"crossword-clue-row\",\n      onClick: () => {\n        this.props.clueClicked(clue);\n      },\n      style: {\n        backgroundColor: this.getClueBackgroundColor(clue),\n        borderLeftColor: this.getClueBorderColor(clue)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, clue.number), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, clue.text)))));\n  }\n\n}\n\nCrosswordClueScroll.propTypes = {\n  listTitle: PropTypes.string.isRequired,\n  clueList: PropTypes.array.isRequired,\n  selectedClue: PropTypes.object.isRequired,\n  isMatchingDirection: PropTypes.bool.isRequired,\n  scrollTop: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n  clueClicked: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\nexport default CrosswordClueScroll;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordClueScroll.jsx"],"names":["React","Component","ReactDOM","PropTypes","CrosswordClueScroll","constructor","props","onScroll","bind","getClueBackgroundColor","getClueBorderColor","componentDidUpdate","topClue","current","scrollTop","handleScroll","findDOMNode","refs","elem","clue","number","selectedClue","isMatchingDirection","settings","colorScheme","colors","render","listTitle","clueList","map","i","clueClicked","backgroundColor","borderLeftColor","text","propTypes","string","isRequired","array","object","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport '../css/CrosswordBoardApp.css'\n\nclass CrosswordClueScroll extends Component {\n    constructor (props) {\n        super(props)\n\n        this.onScroll = this.onScroll.bind(this)\n        this.getClueBackgroundColor = this.getClueBackgroundColor.bind(this)\n        this.getClueBorderColor = this.getClueBorderColor.bind(this)\n    }\n\n    componentDidUpdate() {\n        this.topClue.current.scrollTop = this.props.scrollTop;\n    }\n\n    onScroll () {\n        this.props.handleScroll( ReactDOM.findDOMNode( this.refs.elem ).scrollTop );\n    }\n\n    getClueBackgroundColor (clue) {\n        if (clue.number === this.props.selectedClue.number && this.props.isMatchingDirection) {\n            return this.props.settings.colorScheme.colors[2]\n        }\n        return \"white\"\n    }\n\n    getClueBorderColor (clue) {\n        if (clue.number === this.props.selectedClue.number) {\n            return this.props.settings.colorScheme.colors[2]\n        }   \n        return \"white\"\n    }\n\n    render () {\n        return (\n            <div className=\"crossword-clue-list\">\n                <div className=\"crossword-clue-list-title\">\n                    {this.props.listTitle}\n                </div>\n                <div className=\"crossword-clue-scroll\" onScroll={this.onScroll()}>\n                    {this.props.clueList.map( (clue,i) =>\n                        <div key={i} className=\"crossword-clue-row\" onClick={() => { this.props.clueClicked(clue) }}\n                            style={{backgroundColor : this.getClueBackgroundColor(clue), borderLeftColor : this.getClueBorderColor(clue)}}>\n                            <div className=\"crossword-clue-row-number\">{clue.number}</div>\n                            <div className=\"crossword-clue-row-text\">{clue.text}</div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nCrosswordClueScroll.propTypes = {\n    listTitle: PropTypes.string.isRequired,\n    clueList: PropTypes.array.isRequired,\n    selectedClue: PropTypes.object.isRequired,\n    isMatchingDirection: PropTypes.bool.isRequired,\n    scrollTop: PropTypes.func.isRequired,\n    handleScroll: PropTypes.func.isRequired,\n    clueClicked: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired\n}\n\nexport default CrosswordClueScroll\n\n"]},"metadata":{},"sourceType":"module"}