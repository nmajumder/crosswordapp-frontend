{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordBoardApp.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/CrosswordBoardApp.css';\nimport SquareSelection from '../libs/SquareSelection.js';\nimport CrosswordClueScroll from './CrosswordClueScroll.jsx';\n\nclass CrosswordBoardApp extends Component {\n  constructor(props) {\n    super(props);\n    this.boardPx = this.props.boardWidthPx;\n    this.boardSize = this.props.crossword.grid.length;\n    this.rowPx = this.boardPx / this.boardSize;\n    this.squarePx = this.rowPx - 1;\n    this.numbered = this.props.crossword.numbered;\n    this.acrossClues = this.props.crossword.acrossClues.sort((c1, c2) => c1.number > c2.number ? 1 : -1);\n    this.downClues = this.props.crossword.downClues.sort((c1, c2) => c1.number > c2.number ? 1 : -1);\n    this.clueRefMap = this.props.crossword.clueRefMap;\n    let currentSelection = new SquareSelection();\n    let i = 0;\n\n    while (this.props.crossword.numbered[0][i] === \"_\") {\n      i++;\n    }\n\n    currentSelection.coords = [0, i];\n    currentSelection.direction = \"Across\";\n    this.state = {\n      windowWidth: window.innerWidth,\n      currentSelection: currentSelection,\n      grid: this.props.crossword.grid,\n      clueScrollTop: 0\n    };\n    this.acrossClueClicked = this.acrossClueClicked.bind(this);\n    this.downClueClicked = this.downClueClicked.bind(this);\n    this.boardSquareClicked = this.boardSquareClicked.bind(this);\n    this.getSelectedSquares = this.getSelectedSquares.bind(this);\n    this.getSquareBackgroundColor = this.getSquareBackgroundColor.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.gridLeft = this.gridLeft.bind(this);\n    this.gridUp = this.gridUp.bind(this);\n    this.gridRight = this.gridRight.bind(this);\n    this.gridDown = this.gridDown.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"Crossword Board App is Mounting...\");\n    document.addEventListener(\"keydown\", this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Crossword Board App is Unmounting...\"); // save state of grid\n  }\n\n  onKeyDown(event) {\n    console.log(event);\n    event.preventDefault();\n    let selection = this.state.currentSelection;\n\n    switch (event.which) {\n      case 13:\n        // enter key\n        break;\n\n      case 9:\n        // tab key\n        break;\n\n      case 8:\n        // delete key\n        break;\n\n      case 37:\n        // left arrow\n        if (selection.direction === \"Down\") {\n          selection.flipDirection();\n        } else {\n          selection.coords = this.gridLeft(selection.coords);\n        }\n\n        break;\n\n      case 38:\n        // up arrow\n        if (selection.direction === \"Across\") {\n          selection.flipDirection();\n        } else {\n          selection.coords = this.gridUp(selection.coords);\n        }\n\n        break;\n\n      case 39:\n        // right arrow\n        if (selection.direction === \"Down\") {\n          selection.flipDirection();\n        } else {\n          selection.coords = this.gridRight(selection.coords);\n        }\n\n        break;\n\n      case 40:\n        // down arrow\n        if (selection.direction === \"Across\") {\n          selection.flipDirection();\n        } else {\n          selection.coords = this.gridDown(selection.coords);\n        }\n\n        break;\n    }\n\n    this.setState({\n      currentSelection: selection\n    });\n  }\n\n  gridLeft(coords) {\n    let [r, c] = coords;\n    c--;\n\n    if (c < 0) {\n      c += this.boardSize;\n      r--;\n\n      if (r < 0) {\n        r += this.boardSize;\n      }\n    }\n\n    while (this.numbered[r][c] === \"_\") {\n      c--;\n\n      if (c < 0) {\n        c += this.boardSize;\n        r--;\n\n        if (r < 0) {\n          r += this.boardSize;\n        }\n      }\n    }\n\n    return [r, c];\n  }\n\n  gridUp(coords) {\n    let [r, c] = coords;\n    r--;\n\n    if (r < 0) {\n      r += this.boardSize;\n      c--;\n\n      if (c < 0) {\n        c += this.boardSize;\n      }\n    }\n\n    while (this.numbered[r][c] === \"_\") {\n      r--;\n\n      if (r < 0) {\n        r += this.boardSize;\n        c--;\n\n        if (c < 0) {\n          c += this.boardSize;\n        }\n      }\n    }\n\n    return [r, c];\n  }\n\n  gridRight(coords) {\n    let [r, c] = coords;\n    c++;\n\n    if (c >= this.boardSize) {\n      c -= this.boardSize;\n      r++;\n\n      if (r >= this.boardSize) {\n        r -= this.boardSize;\n      }\n    }\n\n    while (this.numbered[r][c] === \"_\") {\n      c++;\n\n      if (c >= this.boardSize) {\n        c -= this.boardSize;\n        r++;\n\n        if (r >= this.boardSize) {\n          r -= this.boardSize;\n        }\n      }\n    }\n\n    return [r, c];\n  }\n\n  gridDown(coords) {\n    let [r, c] = coords;\n    r++;\n\n    if (r >= this.boardSize) {\n      r -= this.boardSize;\n      c++;\n\n      if (c >= this.boardSize) {\n        c -= this.boardSize;\n      }\n    }\n\n    while (this.numbered[r][c] === \"_\") {\n      r++;\n\n      if (r >= this.boardSize) {\n        r -= this.boardSize;\n        c++;\n\n        if (c >= this.boardSize) {\n          c -= this.boardSize;\n        }\n      }\n    }\n\n    return [r, c];\n  }\n\n  acrossClueClicked(clue) {\n    console.log('Clicked down clue with number: ' + clue.number);\n  }\n\n  downClueClicked(clue) {\n    console.log('Clicked down clue with number: ' + clue.number);\n  }\n\n  boardSquareClicked(square) {\n    if (square.value === \"_\") {\n      return;\n    }\n\n    let selection = this.state.currentSelection;\n\n    if (square.rowCoord === selection.coords[0] && square.colCoord === selection.coords[1]) {\n      selection.flipDirection();\n    } else {\n      selection.moveTo([square.rowCoord, square.colCoord]);\n    }\n\n    this.setState({\n      currentSelection: selection\n    });\n  }\n\n  getSelectedSquares(selection) {\n    const coords = selection.coords;\n    const direction = selection.direction;\n    let boardSquare = this.state.grid[coords[0]][coords[1]];\n    let selectedCoordList = [];\n\n    if (direction === \"Across\") {\n      let clue = this.acrossClues.find(clue => clue.number === boardSquare.acrossClueNum);\n      let firstCoords = [clue.rowCoord, clue.colCoord];\n      let wordLen = clue.answerLength;\n\n      for (let i = firstCoords[1]; i < firstCoords[1] + wordLen; i++) {\n        selectedCoordList.push([firstCoords[0], i].toString());\n      }\n    } else {\n      let clue = this.downClues.find(clue => clue.number === boardSquare.downClueNum);\n      let firstCoords = [clue.rowCoord, clue.colCoord];\n      let wordLen = clue.answerLength;\n\n      for (let i = firstCoords[0]; i < firstCoords[0] + wordLen; i++) {\n        selectedCoordList.push([i, firstCoords[1]].toString());\n      }\n    }\n\n    return selectedCoordList;\n  }\n\n  getSquareBackgroundColor(square, selection, highlightedSquares) {\n    if (square.value === \"_\") return \"black\";\n    let thisSquareKey = [square.rowCoord, square.colCoord].toString();\n\n    if (highlightedSquares.includes(thisSquareKey)) {\n      if (thisSquareKey === selection.coords.toString()) {\n        return this.props.settings.colorScheme.colors[1];\n      } else {\n        return this.props.settings.colorScheme.colors[2];\n      }\n    }\n\n    return \"white\";\n  }\n\n  render() {\n    const {\n      currentSelection,\n      grid,\n      clueScrollTop\n    } = this.state;\n    let clueWidthPx = \"\" + (this.props.windowWidthPx - 790 - 2) + \"px\";\n    const highlightedSquares = this.getSelectedSquares(currentSelection);\n    const acrossClue = this.acrossClues.find(c => c.number === grid[currentSelection.coords[0]][currentSelection.coords[1]].acrossClueNum);\n    const downClue = this.downClues.find(c => c.number === grid[currentSelection.coords[0]][currentSelection.coords[1]].downClueNum);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board-and-clues-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board\",\n      style: {\n        width: this.boardPx,\n        height: this.boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, grid.map((row, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      style: {\n        height: this.rowPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, row.map((square, j) => /*#__PURE__*/React.createElement(\"div\", {\n      key: j,\n      className: \"crossword-square\",\n      onClick: () => {\n        this.boardSquareClicked(square);\n      },\n      style: {\n        width: this.squarePx,\n        height: this.squarePx,\n        backgroundColor: this.getSquareBackgroundColor(square, currentSelection, highlightedSquares)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-square-number\",\n      style: {\n        fontSize: `${this.boardSize > 15 ? \"6pt\" : `${this.boardSize > 10 ? \"9pt\" : \"12pt\"}`}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 41\n      }\n    }, this.numbered[i][j] !== \"_\" && this.numbered[i][j] !== \"0\" ? this.numbered[i][j] : \"\"), square.value === '?' || square.value === '_' ? '' : square.value))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-section\",\n      style: {\n        width: clueWidthPx,\n        height: this.boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CrosswordClueScroll, {\n      listTitle: \"Across\",\n      clueList: this.acrossClues,\n      selectedClue: acrossClue,\n      isMatchingDirection: currentSelection.direction === 'Across',\n      scrollTop: clueScrollTop,\n      handleScroll: this.handleClueScroll,\n      clueClicked: this.acrossClueClicked,\n      settings: this.props.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CrosswordClueScroll, {\n      listTitle: \"Down\",\n      clueList: this.downClues,\n      selectedClue: downClue,\n      isMatchingDirection: currentSelection.direction === 'Down',\n      scrollTop: clueScrollTop,\n      handleScroll: this.handleClueScroll,\n      clueClicked: this.downClueClicked,\n      settings: this.props.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nCrosswordBoardApp.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  boardWidthPx: PropTypes.number.isRequired,\n  windowWidthPx: PropTypes.number.isRequired,\n  settings: PropTypes.object.isRequired\n};\nexport default CrosswordBoardApp;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordBoardApp.jsx"],"names":["React","Fragment","Component","PropTypes","SquareSelection","CrosswordClueScroll","CrosswordBoardApp","constructor","props","boardPx","boardWidthPx","boardSize","crossword","grid","length","rowPx","squarePx","numbered","acrossClues","sort","c1","c2","number","downClues","clueRefMap","currentSelection","i","coords","direction","state","windowWidth","window","innerWidth","clueScrollTop","acrossClueClicked","bind","downClueClicked","boardSquareClicked","getSelectedSquares","getSquareBackgroundColor","onKeyDown","gridLeft","gridUp","gridRight","gridDown","componentDidMount","console","log","document","addEventListener","componentWillUnmount","event","preventDefault","selection","which","flipDirection","setState","r","c","clue","square","value","rowCoord","colCoord","moveTo","boardSquare","selectedCoordList","find","acrossClueNum","firstCoords","wordLen","answerLength","push","toString","downClueNum","highlightedSquares","thisSquareKey","includes","settings","colorScheme","colors","render","clueWidthPx","windowWidthPx","acrossClue","downClue","width","height","map","row","j","backgroundColor","fontSize","handleClueScroll","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/CrosswordBoardApp.css'\nimport SquareSelection from '../libs/SquareSelection.js'\nimport CrosswordClueScroll from './CrosswordClueScroll.jsx'\n\nclass CrosswordBoardApp extends Component {\n    constructor (props) {\n        super(props)\n\n        this.boardPx = this.props.boardWidthPx\n        this.boardSize = this.props.crossword.grid.length\n        this.rowPx = this.boardPx / this.boardSize\n        this.squarePx = this.rowPx - 1\n\n        this.numbered = this.props.crossword.numbered\n        this.acrossClues = this.props.crossword.acrossClues.sort((c1, c2) => (c1.number > c2.number) ? 1 : -1)\n        this.downClues = this.props.crossword.downClues.sort((c1, c2) => (c1.number > c2.number) ? 1 : -1)\n        this.clueRefMap = this.props.crossword.clueRefMap\n        \n        let currentSelection = new SquareSelection()\n        let i = 0\n        while (this.props.crossword.numbered[0][i] === \"_\") {\n            i++\n        }\n        currentSelection.coords = [0,i]\n        currentSelection.direction = \"Across\"\n\n        this.state = {\n            windowWidth: window.innerWidth,\n            currentSelection: currentSelection,\n            grid: this.props.crossword.grid,\n            clueScrollTop: 0\n        }\n\n        this.acrossClueClicked = this.acrossClueClicked.bind(this)\n        this.downClueClicked = this.downClueClicked.bind(this)\n        this.boardSquareClicked = this.boardSquareClicked.bind(this)\n\n        this.getSelectedSquares = this.getSelectedSquares.bind(this)\n        this.getSquareBackgroundColor = this.getSquareBackgroundColor.bind(this)\n\n        this.onKeyDown = this.onKeyDown.bind(this)\n        this.gridLeft = this.gridLeft.bind(this)\n        this.gridUp = this.gridUp.bind(this)\n        this.gridRight = this.gridRight.bind(this)\n        this.gridDown = this.gridDown.bind(this)\n    }\n\n    componentDidMount () {\n        console.log(\"Crossword Board App is Mounting...\")\n        document.addEventListener(\"keydown\", this.onKeyDown, false);\n    }\n\n    componentWillUnmount () {\n        console.log(\"Crossword Board App is Unmounting...\")\n        // save state of grid\n    }\n\n    onKeyDown (event) {\n        console.log(event)\n        event.preventDefault()\n        let selection = this.state.currentSelection\n        switch(event.which) {\n            case 13:\n                // enter key\n                break;\n            case 9:\n                // tab key\n                break;\n            case 8:\n                // delete key\n                break;\n            case 37:\n                // left arrow\n                if (selection.direction === \"Down\") {\n                    selection.flipDirection()\n                } else {\n                    selection.coords = this.gridLeft(selection.coords)\n                }\n                break;\n            case 38:\n                // up arrow\n                if (selection.direction === \"Across\") {\n                    selection.flipDirection()\n                } else {\n                    selection.coords = this.gridUp(selection.coords)\n                }\n                break;\n            case 39:\n                // right arrow\n                if (selection.direction === \"Down\") {\n                    selection.flipDirection()\n                } else {\n                    selection.coords = this.gridRight(selection.coords)\n                }\n                break;\n            case 40:\n                // down arrow\n                if (selection.direction === \"Across\") {\n                    selection.flipDirection()\n                } else {\n                    selection.coords = this.gridDown(selection.coords)\n                }\n                break;\n        }\n        this.setState({\n            currentSelection: selection\n        })\n    }\n\n    gridLeft (coords) {\n        let [r,c] = coords\n        c--\n        if (c < 0) {\n            c += this.boardSize\n            r--\n            if (r < 0) {\n                r += this.boardSize\n            }\n        }\n        while (this.numbered[r][c] === \"_\") {\n            c--\n            if (c < 0) {\n                c += this.boardSize\n                r--\n                if (r < 0) {\n                    r += this.boardSize\n                }\n            }\n        }\n        return [r,c]\n    }\n\n    gridUp (coords) {\n        let [r,c] = coords\n        r--\n        if (r < 0) {\n            r += this.boardSize\n            c--\n            if (c < 0) {\n                c += this.boardSize\n            }\n        }\n        while (this.numbered[r][c] === \"_\") {\n            r--\n            if (r < 0) {\n                r += this.boardSize\n                c--\n                if (c < 0) {\n                    c += this.boardSize\n                }\n            }\n        }\n        return [r,c]\n    }\n\n    gridRight (coords) {\n        let [r,c] = coords\n        c++\n        if (c >= this.boardSize) {\n            c -= this.boardSize\n            r++\n            if (r >= this.boardSize) {\n                r -= this.boardSize\n            }\n        }\n        while (this.numbered[r][c] === \"_\") {\n            c++\n            if (c >= this.boardSize) {\n                c -= this.boardSize\n                r++\n                if (r >= this.boardSize) {\n                    r -= this.boardSize\n                }\n            }\n        }\n        return [r,c]\n    }\n\n    gridDown (coords) {\n        let [r,c] = coords\n        r++\n        if (r >= this.boardSize) {\n            r -= this.boardSize\n            c++\n            if (c >= this.boardSize) {\n                c -= this.boardSize\n            }\n        }\n        while (this.numbered[r][c] === \"_\") {\n            r++\n            if (r >= this.boardSize) {\n                r -= this.boardSize\n                c++\n                if (c >= this.boardSize) {\n                    c -= this.boardSize\n                }\n            }\n        }\n        return [r,c]\n    }\n\n    acrossClueClicked (clue) {\n        console.log('Clicked down clue with number: ' + clue.number)\n    }\n\n    downClueClicked (clue) {\n        console.log('Clicked down clue with number: ' + clue.number)\n    }\n\n\n\n    boardSquareClicked (square) {\n        if (square.value === \"_\") {\n            return\n        }\n        let selection = this.state.currentSelection\n        if (square.rowCoord === selection.coords[0] && square.colCoord === selection.coords[1]) {\n            selection.flipDirection()\n        } else {\n            selection.moveTo([square.rowCoord, square.colCoord])\n        }\n        this.setState({\n            currentSelection: selection\n        })\n    }\n\n    getSelectedSquares (selection) {\n        const coords = selection.coords\n        const direction = selection.direction\n        let boardSquare = this.state.grid[coords[0]][coords[1]]\n        let selectedCoordList = []\n        if (direction === \"Across\") {\n            let clue = this.acrossClues.find(clue => clue.number === boardSquare.acrossClueNum)\n            let firstCoords = [clue.rowCoord, clue.colCoord]\n            let wordLen = clue.answerLength\n            for (let i = firstCoords[1]; i < firstCoords[1] + wordLen; i++) {\n                selectedCoordList.push([firstCoords[0],i].toString())\n            }\n        } else {\n            let clue = this.downClues.find(clue => clue.number === boardSquare.downClueNum)\n            let firstCoords = [clue.rowCoord, clue.colCoord]\n            let wordLen = clue.answerLength\n            for (let i = firstCoords[0]; i < firstCoords[0] + wordLen; i++) {\n                selectedCoordList.push([i,firstCoords[1]].toString())\n            }\n        }\n        return selectedCoordList\n    }\n\n    getSquareBackgroundColor (square, selection, highlightedSquares) {\n        if (square.value === \"_\") return \"black\"\n        let thisSquareKey = [square.rowCoord, square.colCoord].toString()\n        if (highlightedSquares.includes(thisSquareKey)) {\n            if (thisSquareKey === selection.coords.toString()) {\n                return this.props.settings.colorScheme.colors[1]\n            } else {\n                return this.props.settings.colorScheme.colors[2]\n            }\n        }\n        return \"white\"\n    }\n\n    render () {\n        const { currentSelection, grid, clueScrollTop } = this.state\n        let clueWidthPx = \"\" + (this.props.windowWidthPx - 790 - 2) + \"px\"\n\n        const highlightedSquares = this.getSelectedSquares(currentSelection)\n\n        const acrossClue = this.acrossClues.find(c => c.number === grid[currentSelection.coords[0]][currentSelection.coords[1]].acrossClueNum)\n        const downClue = this.downClues.find(c => c.number === grid[currentSelection.coords[0]][currentSelection.coords[1]].downClueNum)\n\n        return (\n            <Fragment>\n                <div className=\"crossword-board-and-clues-wrapper\">\n                    <div className=\"crossword-board\" style={{ width : this.boardPx, height : this.boardPx }}>\n                        {grid.map( (row, i) =>\n                            <div key={i} style={{height : this.rowPx}}>\n                                {row.map( (square, j) => \n                                    <div key={j} className={\"crossword-square\"} onClick={() => { this.boardSquareClicked(square) }}\n                                            style={{width : this.squarePx, height : this.squarePx, \n                                                backgroundColor : this.getSquareBackgroundColor(square, currentSelection, highlightedSquares)}}>\n                                        <div className=\"board-square-number\" \n                                            style={{fontSize: `${this.boardSize > 15 ? \"6pt\" : `${this.boardSize > 10 ? \"9pt\" : \"12pt\"}`}`}}>\n                                            {this.numbered[i][j] !== \"_\" && this.numbered[i][j] !== \"0\" ? this.numbered[i][j] : \"\"}</div>\n                                        {square.value === '?' || square.value === '_' ? '' : square.value}\n                                    </div>\n                                )}\n                            </div>\n\n                        )}\n                    </div>\n                    <div className=\"crossword-clue-section\" style={{width : clueWidthPx, height : this.boardPx}}>\n                        <CrosswordClueScroll \n                            listTitle={\"Across\"}\n                            clueList={this.acrossClues}\n                            selectedClue={acrossClue}\n                            isMatchingDirection={currentSelection.direction === 'Across'}\n                            scrollTop={clueScrollTop}\n                            handleScroll={this.handleClueScroll}\n                            clueClicked={this.acrossClueClicked}\n                            settings={this.props.settings}/>\n                        <CrosswordClueScroll \n                            listTitle={\"Down\"}\n                            clueList={this.downClues}\n                            selectedClue={downClue}\n                            isMatchingDirection={currentSelection.direction === 'Down'}\n                            scrollTop={clueScrollTop}\n                            handleScroll={this.handleClueScroll}\n                            clueClicked={this.downClueClicked}\n                            settings={this.props.settings}/>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordBoardApp.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    boardWidthPx: PropTypes.number.isRequired,\n    windowWidthPx: PropTypes.number.isRequired,\n    settings: PropTypes.object.isRequired\n}\n\nexport default CrosswordBoardApp"]},"metadata":{},"sourceType":"module"}