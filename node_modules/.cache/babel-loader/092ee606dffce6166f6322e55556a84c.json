{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CrosswordPage.css';\n\nclass CrosswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.crossword.id,\n      title: this.props.crossword.title,\n      date: this.props.crossword.date,\n      difficulty: this.props.crossword.difficulty,\n      numbered: this.props.crossword.numbered,\n      grid: this.props.crossword.grid,\n      acrossClues: this.props.crossword.acrossClues,\n      downClues: this.props.crossword.downClues,\n      clueRefMap: this.props.crossword.clueRefMap\n    };\n  }\n\n  componentWillUnmount() {// save state of grid\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      date,\n      difficulty,\n      numbered,\n      grid,\n      acrossClues,\n      downClues,\n      clueRefMap\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-back-button\",\n      onClick: () => {\n        this.props.backSelected();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, '<', \" Back to all crosswords\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, grid.map(row => /*#__PURE__*/React.createElement(\"div\", {\n      className: grid.length === 15 ? \"crossword-board-row-15\" : \"crossword-board-row-21\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, row.map(square => /*#__PURE__*/React.createElement(\"div\", {\n      className: grid.length === 15 ? \"crossword-board-square-15\" : \"crossword-board-square-21\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }\n    }, \"square.value\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nCrosswordPage.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  backSelected: PropTypes.func.isRequired\n};\nexport default CrosswordPage;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx"],"names":["React","Fragment","Component","PropTypes","CrosswordPage","constructor","props","state","id","crossword","title","date","difficulty","numbered","grid","acrossClues","downClues","clueRefMap","componentWillUnmount","render","backSelected","map","row","length","square","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,SAAX,CAAqBD,EADhB;AAETE,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,SAAX,CAAqBC,KAFnB;AAGTC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWG,SAAX,CAAqBE,IAHlB;AAITC,MAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWG,SAAX,CAAqBG,UAJxB;AAKTC,MAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWG,SAAX,CAAqBI,QALtB;AAMTC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWG,SAAX,CAAqBK,IANlB;AAOTC,MAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWG,SAAX,CAAqBM,WAPzB;AAQTC,MAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWG,SAAX,CAAqBO,SARvB;AASTC,MAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWG,SAAX,CAAqBQ;AATxB,KAAb;AAYH;;AAEDC,EAAAA,oBAAoB,GAAI,CACpB;AACH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEX,MAAAA,EAAF;AAAME,MAAAA,KAAN;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,UAAnB;AAA+BC,MAAAA,QAA/B;AAAyCC,MAAAA,IAAzC;AAA+CC,MAAAA,WAA/C;AAA4DC,MAAAA,SAA5D;AAAuEC,MAAAA;AAAvE,QAAsF,KAAKV,KAAjG;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKD,KAAL,CAAWc,YAAX;AAA2B,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,4BADJ,eAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IAAI,CAACO,GAAL,CAAUC,GAAG,iBACV;AAAK,MAAA,SAAS,EAAER,IAAI,CAACS,MAAL,KAAgB,EAAhB,GAAqB,wBAArB,GAAgD,wBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,GAAG,CAACD,GAAJ,CAASG,MAAM,iBACZ;AAAK,MAAA,SAAS,EAAEV,IAAI,CAACS,MAAL,KAAgB,EAAhB,GAAqB,2BAArB,GAAmD,2BAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,CADL,CADH,CADL,CAJJ,eAgBI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAmBI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ,CADJ;AA2BH;;AAnDiC;;AAsDtCnB,aAAa,CAACqB,SAAd,GAA0B;AACtBhB,EAAAA,SAAS,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UADN;AAEtBP,EAAAA,YAAY,EAAEjB,SAAS,CAACyB,IAAV,CAAeD;AAFP,CAA1B;AAKA,eAAevB,aAAf","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './CrosswordPage.css'\n\nclass CrosswordPage extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            id: this.props.crossword.id,\n            title: this.props.crossword.title,\n            date: this.props.crossword.date,\n            difficulty: this.props.crossword.difficulty,\n            numbered: this.props.crossword.numbered,\n            grid: this.props.crossword.grid,\n            acrossClues: this.props.crossword.acrossClues,\n            downClues: this.props.crossword.downClues,\n            clueRefMap: this.props.crossword.clueRefMap\n        }\n\n    }\n\n    componentWillUnmount () {\n        // save state of grid\n    }\n\n    render () {\n        const { id, title, date, difficulty, numbered, grid, acrossClues, downClues, clueRefMap } = this.state\n        return (\n            <Fragment>\n                <div className=\"crossword-page-wrapper\">\n                    <div className='crossword-page-back-button' onClick={() => { this.props.backSelected() }}>\n                        {'<'} Back to all crosswords\n                    </div>\n                    <div className=\"crossword-board\">\n                        {grid.map( row =>\n                            <div className={grid.length === 15 ? \"crossword-board-row-15\" : \"crossword-board-row-21\"}>\n                                {row.map( square => \n                                    <div className={grid.length === 15 ? \"crossword-board-square-15\" : \"crossword-board-square-21\"}>\n                                        square.value\n                                    </div>\n                                )}\n                            </div>\n\n                        )}\n                    </div>\n                    <div className=\"crossword-clue-list\">\n\n                    </div>\n                    <div className=\"crossword-clue-list\">\n\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordPage.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    backSelected: PropTypes.func.isRequired\n}\n\nexport default CrosswordPage"]},"metadata":{},"sourceType":"module"}