{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/SettingsModal/SettingsModal.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport ColorScheme from '../../libs/ColorScheme.js';\nimport ColorSchemeList from '../../libs/ColorSchemeList.js';\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './SettingsModal.css';\nimport Settings from '../../libs/Settings.js';\n\nclass SettingsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: this.props.settings\n    };\n    this.colorSchemeClicked = this.colorSchemeClicked.bind(this);\n    this.inactivityOptionClicked = this.inactivityOptionClicked.bind(this);\n    this.soundOptionClicked = this.soundOptionClicked.bind(this);\n    this.showTimerClicked = this.showTimerClicked.bind(this);\n    this.settingsRestored = this.settingsRestored.bind(this);\n    this.settingsAreDefault = this.settingsAreDefault.bind(this);\n  }\n\n  settingsRestored() {\n    if (this.settingsAreDefault(this.state.settings)) {\n      return;\n    }\n\n    this.setState({\n      settings: new Settings()\n    });\n    this.props.settingsSave(this.state.settings);\n  }\n\n  settingsAreDefault() {\n    return this.state.settings.isDefault();\n  }\n\n  colorSchemeClicked(c) {\n    if (c.key === this.state.settings.colorScheme.key) {\n      return;\n    }\n\n    let newSettings = this.state.settings;\n    newSettings.colorScheme = c;\n    this.setState({\n      settings: newSettings\n    });\n    this.props.settingsSave(this.state.settings);\n  }\n\n  inactivityOptionClicked(seconds) {\n    if (seconds === this.state.settings.timerInactivity) {\n      return;\n    }\n\n    let newSettings = this.state.settings;\n    newSettings.timerInactivity = seconds;\n    this.setState({\n      settings: newSettings\n    });\n    this.props.settingsSave(this.state.settings);\n  }\n\n  soundOptionClicked(yesNo) {\n    if (yesNo === this.state.settings.playSound) {\n      return;\n    }\n\n    let newSettings = this.state.settings;\n    newSettings.playSound = yesNo;\n    this.setState({\n      settings: newSettings\n    });\n    this.props.settingsSave(this.state.settings);\n  }\n\n  showTimerClicked(yesNo) {\n    if (yesNo === this.state.settings.showTimer) {\n      return;\n    }\n\n    let newSettings = this.state.settings;\n    newSettings.showTimer = yesNo;\n    this.setState({\n      settings: newSettings\n    });\n    this.props.settingsSave(this.state.settings);\n  }\n\n  render() {\n    const {\n      savedSettings,\n      settings\n    } = this.state;\n    console.log(\"Crossword inactivity \" + settings.timerInactivity);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: `${this.props.shouldShow ? \"block\" : \"none\"}`\n      },\n      className: \"settings-modal-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"settings-modal-cancel\",\n      icon: faTimes,\n      onClick: () => this.props.settingsBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Crossword Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Color Schemes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-scheme-row-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, ColorSchemeList.colorSchemes.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-scheme-row\",\n      style: {\n        backgroundColor: `${c.key === settings.colorScheme.key ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.colorSchemeClicked(c),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-scheme-row-part\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-scheme-row-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, c.displayName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-scheme-row-part\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ColorSchemeRow, {\n      className: \"color-scheme-row-graphic\",\n      colorScheme: c,\n      width: 170,\n      height: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Interaction\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Pause game when inactive for...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.timerInactivity === 30 ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.inactivityOptionClicked(30),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, \"30s\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.timerInactivity === 60 ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.inactivityOptionClicked(60),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, \"60s\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.timerInactivity === 90 ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.inactivityOptionClicked(90),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"90s\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.timerInactivity === 0 ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.inactivityOptionClicked(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Never\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Play sound on completion?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.playSound ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.soundOptionClicked(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${!settings.playSound ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.soundOptionClicked(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Show timer?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-interaction-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${settings.showTimer ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.showTimerClicked(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"interaction-settings-option\",\n      style: {\n        backgroundColor: `${!settings.showTimer ? \"#D0D0D0\" : \"\"}`\n      },\n      onClick: () => this.showTimerClicked(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"No\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: `${this.settingsAreDefault()}`,\n      className: \"modal-footer-btn settings-restore-button\",\n      onClick: () => this.settingsRestored(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, \"Restore Defaults\")));\n  }\n\n}\n\nSettingsModal.propTypes = {\n  shouldShow: PropTypes.bool.isRequired,\n  settings: PropTypes.object.isRequired,\n  settingsSave: PropTypes.func.isRequired,\n  settingsBack: PropTypes.func.isRequired\n};\nexport default SettingsModal;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/SettingsModal/SettingsModal.jsx"],"names":["React","Fragment","Component","Button","PropTypes","ColorScheme","ColorSchemeList","ColorSchemeRow","FontAwesomeIcon","faTimes","Settings","SettingsModal","constructor","props","state","settings","colorSchemeClicked","bind","inactivityOptionClicked","soundOptionClicked","showTimerClicked","settingsRestored","settingsAreDefault","setState","settingsSave","isDefault","c","key","colorScheme","newSettings","seconds","timerInactivity","yesNo","playSound","showTimer","render","savedSettings","console","log","display","shouldShow","settingsBack","colorSchemes","map","i","backgroundColor","displayName","propTypes","bool","isRequired","object","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport ColorScheme from '../../libs/ColorScheme.js'\nimport ColorSchemeList from '../../libs/ColorSchemeList.js'\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './SettingsModal.css'\nimport Settings from '../../libs/Settings.js'\n\nclass SettingsModal extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            settings: this.props.settings\n        }\n\n        this.colorSchemeClicked = this.colorSchemeClicked.bind(this)\n        this.inactivityOptionClicked = this.inactivityOptionClicked.bind(this)\n        this.soundOptionClicked = this.soundOptionClicked.bind(this)\n        this.showTimerClicked = this.showTimerClicked.bind(this)\n\n        this.settingsRestored = this.settingsRestored.bind(this)\n        this.settingsAreDefault = this.settingsAreDefault.bind(this)\n    }\n\n    settingsRestored () {\n        if (this.settingsAreDefault(this.state.settings)) {\n            return\n        }\n        this.setState({\n            settings: new Settings()\n        })\n        this.props.settingsSave(this.state.settings)\n    }\n\n    settingsAreDefault () {\n        return this.state.settings.isDefault()\n    }\n\n    colorSchemeClicked (c) {\n        if (c.key === this.state.settings.colorScheme.key) {\n            return\n        }\n        let newSettings = this.state.settings\n        newSettings.colorScheme = c\n        this.setState({\n            settings: newSettings\n        })\n        this.props.settingsSave(this.state.settings)\n    }\n\n    inactivityOptionClicked (seconds) {\n        if (seconds === this.state.settings.timerInactivity) {\n            return\n        }\n        let newSettings = this.state.settings\n        newSettings.timerInactivity = seconds\n        this.setState({\n            settings: newSettings\n        })\n        this.props.settingsSave(this.state.settings)\n    }\n\n    soundOptionClicked (yesNo) {\n        if (yesNo === this.state.settings.playSound) {\n            return\n        }\n        let newSettings = this.state.settings\n        newSettings.playSound = yesNo\n        this.setState({\n            settings: newSettings\n        })\n        this.props.settingsSave(this.state.settings)\n    }\n\n    showTimerClicked (yesNo) {\n        if (yesNo === this.state.settings.showTimer) {\n            return\n        }\n        let newSettings = this.state.settings\n        newSettings.showTimer = yesNo\n        this.setState({\n            settings: newSettings\n        })\n        this.props.settingsSave(this.state.settings)\n    }\n\n    render () {\n        const { savedSettings, settings } = this.state\n        console.log(\"Crossword inactivity \" + settings.timerInactivity)\n        return (\n            <div style={{display: `${this.props.shouldShow ? \"block\" : \"none\"}`}} className=\"settings-modal-wrapper\">\n                <FontAwesomeIcon className=\"settings-modal-cancel\" icon={faTimes} onClick={() => this.props.settingsBack()}/>\n                <div className=\"settings-modal-header\">Crossword Settings</div>\n                <div className=\"settings-modal-body\">\n                    <div className=\"settings-modal-section-title\">Color Schemes</div>\n                    <div className=\"color-scheme-row-scroll\">\n                        {ColorSchemeList.colorSchemes.map( (c,i) =>\n                            <div className=\"color-scheme-row\" \n                                style={{backgroundColor : `${c.key === settings.colorScheme.key ? \"#D0D0D0\" : \"\"}`}}\n                                onClick={() => this.colorSchemeClicked(c)}>\n                                <div className=\"color-scheme-row-part\">\n                                    <div className=\"color-scheme-row-name\">{c.displayName}</div>\n                                </div>\n                                <div className=\"color-scheme-row-part\">\n                                    <ColorSchemeRow className=\"color-scheme-row-graphic\" colorScheme={c} width={170} height={30} />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"settings-modal-section-title\">Interaction</div>\n                    <div className=\"settings-interaction-scroll\">\n                        <div className=\"settings-interaction-section\">\n                            <div className=\"settings-interaction-header\">Pause game when inactive for...</div>\n                            <div className=\"settings-interaction-body\">\n                                <span className=\"interaction-settings-option\" \n                                    style={{backgroundColor : `${settings.timerInactivity === 30 ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.inactivityOptionClicked(30)}>30s</span>\n                                <span className=\"interaction-settings-option\" \n                                    style={{backgroundColor : `${settings.timerInactivity === 60 ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.inactivityOptionClicked(60)}>60s</span>\n                                <span className=\"interaction-settings-option\" \n                                    style={{backgroundColor : `${settings.timerInactivity === 90 ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.inactivityOptionClicked(90)}>90s</span>\n                                <span className=\"interaction-settings-option\" \n                                    style={{backgroundColor : `${settings.timerInactivity === 0 ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.inactivityOptionClicked(0)}>Never</span>\n                            </div>\n                        </div>\n                        <div className=\"settings-interaction-section\">\n                            <div className=\"settings-interaction-header\">Play sound on completion?</div>\n                            <div className=\"settings-interaction-body\">\n                                <span className=\"interaction-settings-option\"\n                                    style={{backgroundColor : `${settings.playSound ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.soundOptionClicked(true)}>Yes</span>\n                                <span className=\"interaction-settings-option\"\n                                    style={{backgroundColor : `${!settings.playSound ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.soundOptionClicked(false)}>No</span>\n                            </div>\n                        </div>\n                        <div className=\"settings-interaction-section\">\n                            <div className=\"settings-interaction-header\">Show timer?</div>\n                            <div className=\"settings-interaction-body\">\n                                <span className=\"interaction-settings-option\"\n                                    style={{backgroundColor : `${settings.showTimer ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.showTimerClicked(true)}>Yes</span>\n                                <span className=\"interaction-settings-option\"\n                                    style={{backgroundColor : `${!settings.showTimer ? \"#D0D0D0\" : \"\"}`}}\n                                    onClick={() => this.showTimerClicked(false)}>No</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"settings-modal-footer\">\n                    <Button disabled={`${this.settingsAreDefault()}`} \n                        className=\"modal-footer-btn settings-restore-button\"\n                        onClick={() => this.settingsRestored()}>Restore Defaults</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nSettingsModal.propTypes = {\n    shouldShow: PropTypes.bool.isRequired,\n    settings: PropTypes.object.isRequired,\n    settingsSave: PropTypes.func.isRequired,\n    settingsBack: PropTypes.func.isRequired\n}\n\nexport default SettingsModal"]},"metadata":{},"sourceType":"module"}