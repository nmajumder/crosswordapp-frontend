{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport CrosswordBoardApp from '../CrosswordBoardApp/CrosswordBoardApp.jsx';\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx';\nimport ColorSchemeModal from '../SettingsModal/SettingsModal.jsx';\nimport './CrosswordPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faPause } from '@fortawesome/free-solid-svg-icons';\nimport ColorScheme from '../../libs/ColorScheme.js';\nimport Settings from '../../libs/Settings.js';\nimport pause from '../../images/pause.png';\nimport settings from '../../images/settings.png';\n\nclass CrosswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      crossword: this.props.crossword,\n      settings: new Settings(),\n      settingsClicked: false\n    };\n    this.settingsClicked = this.settingsClicked.bind(this);\n    this.exitSettingsClicked = this.exitSettingsClicked.bind(this);\n    this.checkSquareClicked = this.checkSquareClicked.bind(this);\n    this.checkWordClicked = this.checkWordClicked.bind(this);\n    this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this);\n    this.revealSquareClicked = this.revealSquareClicked.bind(this);\n    this.revealWordClicked = this.revealWordClicked.bind(this);\n    this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this);\n    this.clearWordClicked = this.clearWordClicked.bind(this);\n    this.clearPuzzleClicked = this.clearPuzzleClicked.bind(this);\n    this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this);\n  }\n\n  toggleDropdownVisibility(isOpen, which) {\n    if (isOpen) {\n      if (which === \"settings\") {\n        this.setState({\n          settingsClicked: true\n        });\n      }\n\n      document.getElementById('crossword-' + which + '-dropdown').style.backgroundColor = \"#F5F5F5\";\n    } else {\n      document.getElementById('crossword-' + which + '-dropdown').style.removeProperty('background-color');\n    }\n  }\n\n  settingsClicked() {\n    this.setState({\n      settingsClicked: true\n    });\n  }\n\n  settingsSaved(settings) {\n    this.setState({\n      settingsClicked: false,\n      settings: settings\n    });\n  }\n\n  checkSquareClicked() {\n    console.log(\"Checking a square\");\n  }\n\n  checkWordClicked() {\n    console.log(\"Checking a word\");\n  }\n\n  checkPuzzleClicked() {\n    console.log(\"Checking the puzzle\");\n  }\n\n  revealSquareClicked() {\n    console.log(\"Revealing a square\");\n  }\n\n  revealWordClicked() {\n    console.log(\"Revealing a word\");\n  }\n\n  revealPuzzleClicked() {\n    console.log(\"Revealing the puzzle\");\n  }\n\n  clearWordClicked() {\n    console.log(\"Revealing a word\");\n  }\n\n  clearPuzzleClicked() {\n    console.log(\"Clearing the puzzle\");\n  }\n\n  render() {\n    const {\n      crossword,\n      settings,\n      settingsClicked\n    } = this.state;\n    const colorScheme = settings.colorScheme;\n    const boardSize = crossword.grid.length;\n    const boardPx = 630 % boardSize === 0 ? 630 : 630 - 630 % boardSize;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ColorSchemeModal, {\n      shouldShow: settingsClicked,\n      settings: settings,\n      settingsBack: this.exitSettingsClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        filter: `${settingsClicked ? \"blur(3px)\" : \"none\"}`,\n        disabled: settingsClicked\n      },\n      className: \"crossword-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn crossword-page-back-button\",\n      style: {\n        color: colorScheme.colors[3]\n      },\n      onClick: () => {\n        this.props.backSelected();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, '<', \" Save progress and go back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-heading\",\n      style: {\n        width: boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, crossword.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"By Nathan Majumder\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-settings\",\n      onClick: () => {\n        this.settingsClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: colorScheme.colors[3]\n      },\n      className: \"btn crossword-settings-button\",\n      icon: faCog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer-pause-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer-pause\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, \"13:41\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: colorScheme.colors[2]\n      },\n      onMouseOver: event => {\n        event.target.style.color = colorScheme.colors[3];\n      },\n      onMouseOut: event => {\n        event.target.style.color = colorScheme.colors[2];\n      },\n      className: \"btn crossword-pause-button\",\n      icon: faPause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-check-and-reveal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-check-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 40\n        }\n      }, \"Check\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'check');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.checkSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-middle\",\n      as: \"button\",\n      onClick: () => {\n        this.checkWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.checkPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-reveal-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 40\n        }\n      }, \"Reveal\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'reveal');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.revealSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-middle\",\n      as: \"button\",\n      onClick: () => {\n        this.revealWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.revealPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-clear-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 40\n        }\n      }, \"Clear\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'clear');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.clearWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.clearPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")))), /*#__PURE__*/React.createElement(CrosswordBoardApp, {\n      crossword: crossword,\n      boardWidthPx: boardPx,\n      settings: settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nCrosswordPage.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  backSelected: PropTypes.func.isRequired\n};\nexport default CrosswordPage;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage/CrosswordPage.jsx"],"names":["React","Fragment","Component","Dropdown","DropdownButton","PropTypes","CrosswordBoardApp","ColorSchemeRow","ColorSchemeModal","FontAwesomeIcon","faCog","faPause","ColorScheme","Settings","pause","settings","CrosswordPage","constructor","props","state","crossword","settingsClicked","bind","exitSettingsClicked","checkSquareClicked","checkWordClicked","checkPuzzleClicked","revealSquareClicked","revealWordClicked","revealPuzzleClicked","clearWordClicked","clearPuzzleClicked","toggleDropdownVisibility","isOpen","which","setState","document","getElementById","style","backgroundColor","removeProperty","settingsSaved","console","log","render","colorScheme","boardSize","grid","length","boardPx","filter","disabled","color","colors","backSelected","width","title","event","target","fontWeight","metadata","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport CrosswordBoardApp from '../CrosswordBoardApp/CrosswordBoardApp.jsx'\nimport ColorSchemeRow from '../ColorSchemeRow/ColorSchemeRow.jsx'\nimport ColorSchemeModal from '../SettingsModal/SettingsModal.jsx'\nimport './CrosswordPage.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog, faPause } from '@fortawesome/free-solid-svg-icons'\nimport ColorScheme from '../../libs/ColorScheme.js'\nimport Settings from '../../libs/Settings.js'\n\nimport pause from '../../images/pause.png'\nimport settings from '../../images/settings.png'\n\nclass CrosswordPage extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            crossword: this.props.crossword,\n            settings: new Settings(),\n            settingsClicked: false\n        }\n\n        this.settingsClicked = this.settingsClicked.bind(this)\n        this.exitSettingsClicked = this.exitSettingsClicked.bind(this)\n\n        this.checkSquareClicked = this.checkSquareClicked.bind(this)\n        this.checkWordClicked = this.checkWordClicked.bind(this)\n        this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this)\n\n        this.revealSquareClicked = this.revealSquareClicked.bind(this)\n        this.revealWordClicked = this.revealWordClicked.bind(this)\n        this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this)\n\n        this.clearWordClicked = this.clearWordClicked.bind(this)\n        this.clearPuzzleClicked = this.clearPuzzleClicked.bind(this)\n\n        this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this)\n    }\n\n    toggleDropdownVisibility (isOpen, which) {\n        if (isOpen) {\n            if (which === \"settings\") {\n                this.setState({\n                    settingsClicked: true\n                })\n            }\n            document.getElementById('crossword-' + which + '-dropdown').style.backgroundColor = \"#F5F5F5\";\n        } else {\n            document.getElementById('crossword-' + which + '-dropdown').style.removeProperty('background-color')\n        }\n    }\n\n    settingsClicked () {\n        this.setState({\n            settingsClicked: true\n        })\n    }\n\n    settingsSaved (settings) {\n        this.setState({\n            settingsClicked: false,\n            settings: settings\n        })\n    }\n\n    checkSquareClicked () {\n        console.log(\"Checking a square\")\n    }\n\n    checkWordClicked () {\n        console.log(\"Checking a word\")\n    }\n\n    checkPuzzleClicked () {\n        console.log(\"Checking the puzzle\")\n    }\n\n    revealSquareClicked () {\n        console.log(\"Revealing a square\")\n    }\n\n    revealWordClicked () {\n        console.log(\"Revealing a word\")\n    }\n\n    revealPuzzleClicked () {\n        console.log(\"Revealing the puzzle\")\n    }\n\n    clearWordClicked () {\n        console.log(\"Revealing a word\")\n    }\n\n    clearPuzzleClicked () {\n        console.log(\"Clearing the puzzle\")\n    }\n\n    render () {\n        const { crossword, settings, settingsClicked } = this.state\n        const colorScheme = settings.colorScheme\n        const boardSize = crossword.grid.length\n        const boardPx = 630 % boardSize === 0 ? 630 : 630 - (630 % boardSize)\n        return (\n            <Fragment>\n                <ColorSchemeModal\n                    shouldShow={settingsClicked}\n                    settings={settings}\n                    settingsBack={this.exitSettingsClicked} />\n                <div style={{filter: `${settingsClicked ? \"blur(3px)\" : \"none\"}`, disabled: settingsClicked}} className=\"crossword-page-wrapper\">\n                    <div className=\"btn crossword-page-back-button\" style={{color: colorScheme.colors[3]}} onClick={() => { this.props.backSelected() }}>\n                        {'<'} Save progress and go back\n                    </div>\n                    <div className=\"crossword-page-heading\" style={{ width : boardPx }}>\n                        <div className=\"crossword-page-title\">{crossword.title}</div>\n                        <div className=\"crossword-page-author\">By Nathan Majumder</div>\n                    </div>\n                    <div className=\"crossword-page-controls\">\n                        <div className=\"crossword-settings\" onClick={() => { this.settingsClicked() }}>\n                            <FontAwesomeIcon style={{color: colorScheme.colors[3]}} className=\"btn crossword-settings-button\" icon={faCog} />\n                        </div>\n                        <div className=\"crossword-timer-pause-wrapper\">\n                            <div className=\"crossword-timer-pause\">\n                                <div className=\"crossword-timer\">13:41</div>\n                                <FontAwesomeIcon style={{color: colorScheme.colors[2]}} \n                                    onMouseOver={(event) => { event.target.style.color = colorScheme.colors[3]}} \n                                    onMouseOut={(event) => { event.target.style.color = colorScheme.colors[2]}} \n                                    className=\"btn crossword-pause-button\" icon={faPause} />\n                            </div>\n                        </div>\n                        <div className=\"crossword-check-and-reveal\">\n                            <DropdownButton id=\"crossword-check-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Check</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'check') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.checkSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-middle\" as=\"button\" onClick={() => { this.checkWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.checkPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                            <DropdownButton id=\"crossword-reveal-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Reveal</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'reveal') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.revealSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-middle\" as=\"button\" onClick={() => { this.revealWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.revealPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                            <DropdownButton id=\"crossword-clear-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Clear</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'clear') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.clearWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.clearPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                    </div>\n                    <CrosswordBoardApp\n                        crossword={crossword} \n                        boardWidthPx={boardPx}\n                        settings={settings}/>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordPage.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    backSelected: PropTypes.func.isRequired\n}\n\nexport default CrosswordPage"]},"metadata":{},"sourceType":"module"}