{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordApp/CrosswordApp.jsx\";\nimport React, { StrictMode, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CrosswordPage from '../CrosswordPage/CrosswordPage.jsx';\nimport CrosswordHeaderPage from '../CrosswordHeaderPage/CrosswordHeaderPage.jsx';\nimport api from '../../libs/api.js';\n\nclass CrosswordApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      crosswords: [],\n      selectedCrossword: null\n    };\n    this.loadCrosswords = this.loadCrosswords.bind(this);\n    this.crosswordSelected = this.crosswordSelected.bind(this);\n    this.crosswordDeselected = this.crosswordDeselected.bind(this);\n  }\n\n  async loadCrosswords() {\n    let response;\n    let requestSuccess = false;\n\n    try {\n      console.log('Sending call...');\n      response = await api.getAllCrosswords();\n      console.log(response);\n      requestSuccess = response.status === 200;\n    } catch (error) {\n      requestSuccess = false;\n    }\n\n    if (requestSuccess) {\n      this.setState({\n        crosswords: response.data\n      });\n    }\n  }\n\n  crosswordSelected(crossword) {\n    this.setState(state => {\n      return {\n        selectedCrossword: crossword\n      };\n    });\n  }\n\n  crosswordDeselected() {\n    this.setState(state => {\n      return {\n        selectedCrossword: null\n      };\n    });\n  }\n\n  async componentWillMount() {\n    await this.loadCrosswords();\n  }\n\n  render() {\n    const {\n      crosswords,\n      selectedCrossword\n    } = this.state;\n\n    if (selectedCrossword) {\n      return /*#__PURE__*/React.createElement(StrictMode, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CrosswordPage, {\n        crossword: selectedCrossword,\n        backSelected: this.crosswordDeselected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(StrictMode, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CrosswordHeaderPage, {\n        crosswords: crosswords,\n        crosswordSelected: this.crosswordSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nCrosswordApp.propTypes = {};\nexport default CrosswordApp;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordApp/CrosswordApp.jsx"],"names":["React","StrictMode","Component","PropTypes","CrosswordPage","CrosswordHeaderPage","api","CrosswordApp","constructor","props","state","crosswords","selectedCrossword","loadCrosswords","bind","crosswordSelected","crosswordDeselected","response","requestSuccess","console","log","getAllCrosswords","status","error","setState","data","crossword","componentWillMount","render","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACjCM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,iBAAiB,EAAE;AAFV,KAAb;AAKA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAED,QAAMD,cAAN,GAAwB;AACpB,QAAII,QAAJ;AACA,QAAIC,cAAc,GAAG,KAArB;;AACA,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAH,MAAAA,QAAQ,GAAG,MAAMX,GAAG,CAACe,gBAAJ,EAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAC,MAAAA,cAAc,GAAGD,QAAQ,CAACK,MAAT,KAAoB,GAArC;AACH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZL,MAAAA,cAAc,GAAG,KAAjB;AACH;;AAED,QAAIA,cAAJ,EAAoB;AAChB,WAAKM,QAAL,CAAc;AACVb,QAAAA,UAAU,EAAEM,QAAQ,CAACQ;AADX,OAAd;AAGH;AACJ;;AAEDV,EAAAA,iBAAiB,CAAEW,SAAF,EAAa;AAC1B,SAAKF,QAAL,CAAed,KAAD,IAAW;AACrB,aAAO;AACHE,QAAAA,iBAAiB,EAAEc;AADhB,OAAP;AAGH,KAJD;AAKH;;AAEDV,EAAAA,mBAAmB,GAAI;AACnB,SAAKQ,QAAL,CAAed,KAAD,IAAW;AACrB,aAAO;AACHE,QAAAA,iBAAiB,EAAE;AADhB,OAAP;AAGH,KAJD;AAKH;;AAGD,QAAMe,kBAAN,GAA4B;AACxB,UAAM,KAAKd,cAAL,EAAN;AACH;;AAEDe,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEjB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAoC,KAAKF,KAA/C;;AACA,QAAIE,iBAAJ,EAAuB;AACnB,0BACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AACI,QAAA,SAAS,EAAEA,iBADf;AAEI,QAAA,YAAY,EAAE,KAAKI,mBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH,KARD,MAQO;AACH,0BACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,mBAAD;AACI,QAAA,UAAU,EAAEL,UADhB;AAEI,QAAA,iBAAiB,EAAE,KAAKI,iBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;AACJ;;AAzEgC;;AA4ErCR,YAAY,CAACsB,SAAb,GAAyB,EAAzB;AAEA,eAAetB,YAAf","sourcesContent":["import React, { StrictMode, Component } from 'react'\nimport PropTypes from 'prop-types'\nimport CrosswordPage from '../CrosswordPage/CrosswordPage.jsx'\nimport CrosswordHeaderPage from '../CrosswordHeaderPage/CrosswordHeaderPage.jsx'\nimport api from '../../libs/api.js'\n\nclass CrosswordApp extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            crosswords: [],\n            selectedCrossword: null\n        }\n\n        this.loadCrosswords = this.loadCrosswords.bind(this)\n        this.crosswordSelected = this.crosswordSelected.bind(this)\n        this.crosswordDeselected = this.crosswordDeselected.bind(this)\n    }\n\n    async loadCrosswords () {\n        let response\n        let requestSuccess = false\n        try {\n            console.log('Sending call...')\n            response = await api.getAllCrosswords()\n            console.log(response)\n            requestSuccess = response.status === 200\n        } catch (error) {\n            requestSuccess = false\n        }\n\n        if (requestSuccess) {\n            this.setState({\n                crosswords: response.data\n            })\n        }\n    }\n\n    crosswordSelected (crossword) {\n        this.setState((state) => {\n            return {\n                selectedCrossword: crossword\n            }\n        })\n    }\n\n    crosswordDeselected () {\n        this.setState((state) => {\n            return {\n                selectedCrossword: null\n            }\n        })\n    }\n    \n\n    async componentWillMount () {\n        await this.loadCrosswords()\n    }\n\n    render () {\n        const { crosswords, selectedCrossword } = this.state\n        if (selectedCrossword) {\n            return (\n                <StrictMode>\n                    <CrosswordPage \n                        crossword={selectedCrossword} \n                        backSelected={this.crosswordDeselected}/>\n                </StrictMode>\n            )\n        } else {\n            return (\n                <StrictMode>\n                    <CrosswordHeaderPage \n                        crosswords={crosswords}\n                        crosswordSelected={this.crosswordSelected} />\n                </StrictMode>\n            )\n        }\n    }\n}\n\nCrosswordApp.propTypes = {}\n\nexport default CrosswordApp"]},"metadata":{},"sourceType":"module"}