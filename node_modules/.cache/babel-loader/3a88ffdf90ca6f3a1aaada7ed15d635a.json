{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport CrosswordBoardApp from './CrosswordBoardApp.jsx';\nimport SettingsModal from './SettingsModal.jsx';\nimport HelpModal from './HelpModal.jsx';\nimport MessageModal from './MessageModal.jsx';\nimport Timer from './Timer.jsx';\nimport '../css/CrosswordPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faQuestionCircle, faPause } from '@fortawesome/free-solid-svg-icons';\nimport Settings from '../libs/Settings.js';\nimport BoardStatus from '../libs/BoardStatus.js';\nimport api from '../libs/api.js';\n\nclass CrosswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.modalInfos = {\n      \"startPuzzle\": [\"Ready to get started?\", \"Let's Go\"],\n      \"pauseManual\": [\"Your game has been paused\", \"Resume\"],\n      \"pauseInactive\": [\"Your game has been paused due to inactivity\", \"Resume\"],\n      \"puzzleCorrect\": [\"Congratulations, you've successfully solved the puzzle!\", \"Close\"],\n      \"puzzleIncorrect\": [\"Oops, there are still one or more errors to fix\", \"Close\"]\n    };\n    this.state = {\n      crossword: this.props.crossword,\n      savedBoard: new BoardStatus(this.props.crossword.board),\n      settings: new Settings(),\n      modalInfo: [],\n      settingsClicked: false,\n      helpClicked: false,\n      windowSize: window.innerWidth\n    };\n    this.settingsClicked = this.settingsClicked.bind(this);\n    this.saveSettings = this.saveSettings.bind(this);\n    this.helpClicked = this.helpClicked.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.pauseClicked = this.pauseClicked.bind(this);\n    this.crosswordFinished = this.crosswordFinished.bind(this);\n    this.crosswordUnfinished = this.crosswordUnfinished.bind(this);\n    this.checkSquareClicked = this.checkSquareClicked.bind(this);\n    this.checkWordClicked = this.checkWordClicked.bind(this);\n    this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this);\n    this.revealSquareClicked = this.revealSquareClicked.bind(this);\n    this.revealWordClicked = this.revealWordClicked.bind(this);\n    this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this);\n    this.clearWordClicked = this.clearWordClicked.bind(this);\n    this.clearPuzzleClicked = this.clearPuzzleClicked.bind(this);\n    this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.getTimerValue = this.getTimerValue.bind(this);\n    this.saveGridState = this.saveGridState.bind(this);\n    this.clueClicked = this.clueClicked.bind(this);\n    this.boardSquareClicked = this.boardSquareClicked.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n    window.addEventListener('beforeunload', this.saveGridState);\n    this.setState({\n      modalInfo: this.modalInfos[\"startPuzzle\"]\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n    window.removeEventListener('beforeunload', this.handleWindowResize);\n  }\n\n  handleWindowResize() {\n    this.setState({\n      windowSize: window.innerWidth\n    });\n    this.render();\n  }\n\n  getTimerValue(value) {\n    this.state.crossword.board.numSeconds = value;\n\n    if (value % 30 < 0) {\n      if (this.state.savedBoard.shouldBeUpdated(this.state.crossword.board)) {\n        this.saveGridState();\n      } else {\n        console.log(\"No need to save board, nothing has changed\");\n      }\n    }\n  }\n\n  async saveGridState() {\n    let response;\n    let requestSuccess = false;\n\n    try {\n      console.log('Saving crossword state...');\n      console.log(this.state.crossword.board);\n      response = await api.updateCrossword(this.state.crossword.id, \"ME\", this.state.crossword.board);\n      console.log(response);\n      requestSuccess = response.status === 200;\n    } catch (error) {\n      requestSuccess = false;\n    }\n\n    if (!requestSuccess) {\n      console.log(\"Unable to save state of crossword\");\n    } else {\n      this.state.savedBoard.updateBoardStatus(this.state.crossword.board);\n    }\n  }\n\n  crosswordFinished() {\n    this.setState({\n      modalInfo: this.modalInfos[\"puzzleCorrect\"]\n    });\n    this.render();\n  }\n\n  crosswordUnfinished() {\n    this.setState({\n      modalInfo: this.modalInfos[\"puzzleIncorrect\"]\n    });\n    this.render();\n  }\n\n  toggleDropdownVisibility(isOpen, which) {\n    if (isOpen) {\n      document.getElementById('crossword-' + which + '-dropdown').style.backgroundColor = \"#F5F5F5\";\n    } else {\n      document.getElementById('crossword-' + which + '-dropdown').style.removeProperty('background-color');\n    }\n  }\n\n  settingsClicked() {\n    this.setState({\n      settingsClicked: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      settingsClicked: false,\n      helpClicked: false,\n      modalInfo: []\n    });\n  }\n\n  saveSettings(settings) {\n    this.setState({\n      settings: settings\n    });\n  }\n\n  helpClicked() {\n    this.setState({\n      helpClicked: true\n    });\n  }\n\n  pauseClicked() {\n    this.setState({\n      modalInfo: this.modalInfos[\"pauseManual\"]\n    });\n  }\n\n  async checkSquareClicked() {\n    let response;\n    let requestSuccess = false;\n\n    try {\n      console.log('Checking crossword square...');\n      response = await api.checkCrosswordSquare(this.state.crossword.id, \"ME\", this.state.crossword.board);\n      requestSuccess = response.status === 200;\n    } catch (error) {\n      requestSuccess = false;\n    }\n\n    if (!requestSuccess) {\n      console.log(\"Unable to check crossword square\");\n    } else {\n      this.setState({\n        crossword: response.data\n      });\n    }\n\n    console.log(this.state.crossword.board);\n    this.render();\n  }\n\n  async checkWordClicked() {\n    console.log(\"Checking a word\");\n  }\n\n  async checkPuzzleClicked() {\n    console.log(\"Checking the puzzle\");\n  }\n\n  async revealSquareClicked() {\n    console.log(\"Revealing a square\");\n  }\n\n  async revealWordClicked() {\n    console.log(\"Revealing a word\");\n  }\n\n  async revealPuzzleClicked() {\n    console.log(\"Revealing the puzzle\");\n  }\n\n  async clearWordClicked() {\n    console.log(\"Revealing a word\");\n  }\n\n  async clearPuzzleClicked() {\n    console.log(\"Clearing the puzzle\");\n  }\n\n  onKeyDown(event) {\n    console.log(event); // if special key pressed, allow default action\n\n    if (event.ctrlKey || event.altKey || event.metaKey) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.props.typingDisabled) {\n      return;\n    }\n\n    let crossword = this.props.crossword; //let selection = this.props.currentSelection\n\n    if (event.which === 13 || event.which === 9) {\n      // enter or tab\n      CrosswordKeyActions.tabOrEnter(crossword.board, event.shiftKey, this.acrossClues, this.downClues);\n    } else if (event.which === 8) {\n      // delete\n      CrosswordKeyActions.delete(crossword.board);\n    } else if (event.which === 37) {\n      // left arrow\n      CrosswordKeyActions.leftArrow(crossword.board);\n    } else if (event.which === 38) {\n      // up arrow\n      CrosswordKeyActions.upArrow(crossword.board);\n    } else if (event.which === 39) {\n      // right arrow\n      CrosswordKeyActions.rightArrow(crossword.board);\n    } else if (event.which === 40) {\n      // down arrow\n      CrosswordKeyActions.downArrow(crossword.board);\n    } else {\n      let gridWasFull = CrosswordKeyActions.gridIsFull(crossword.board);\n\n      if (event.which >= 65 && event.which <= 90) {\n        // a to z\n        console.log(crossword.board);\n        CrosswordKeyActions.alphaNumeric(crossword.board, event.key.toUpperCase());\n        console.log(crossword.board);\n      } else if (event.which >= 48 && event.which <= 57) {\n        // 0 to 9 or the symbols on the same keys\n        CrosswordKeyActions.alphaNumeric(crossword.board, event.key);\n      } else if (event.which >= 186 && event.which <= 222) {\n        // various symbols that we want to allow in case of special themed puzzle\n        // disallow the underscore because it is reserved for black squares\n        if (event.key === \"_\") {\n          return;\n        }\n\n        CrosswordKeyActions.alphaNumeric(crossword.board, event.key);\n      }\n\n      if (CrosswordKeyActions.gridIsFull(crossword.board.grid)) {\n        this.crosswordIsComplete(!gridWasFull);\n      }\n    }\n\n    this.setState({\n      crossword: crossword\n    }); //this.saveSelection(selection)\n  }\n\n  clueClicked(clue) {\n    let coords = CrosswordKeyActions.getFirstEmptySpace(this.state.crossword.board.grid, clue);\n\n    if (coords === null) {\n      coords = [clue.rowCoord, clue.colCoord];\n    }\n\n    let crossword = this.state.crossword;\n    crossword.board.selection.rowCoord = coords[0];\n    crossword.board.selection.colCoord = coords[1];\n    crossword.board.selection.direction = clue.direction;\n    this.setState({\n      crossword: crossword\n    }); //this.saveSelection(selection)\n  }\n\n  boardSquareClicked(square) {\n    if (square.value === \"_\") {\n      return;\n    }\n\n    let crossword = this.state.crossword;\n    let selection = this.state.crossword.board.selection;\n\n    if (square.rowCoord === selection.rowCoord && square.colCoord === selection.colCoord) {\n      crossword.board.selection.direction = selection.direction === \"Across\" ? \"Down\" : \"Across\";\n    } else {\n      crossword.board.selection.rowCoord = square.rowCoord;\n      crossword.board.selection.colCoord = square.colCoord;\n    }\n\n    this.setState({\n      crossword: crossword\n    }); //this.saveSelection(selection)\n  }\n\n  render() {\n    const {\n      crossword,\n      settings,\n      modalInfo,\n      settingsClicked,\n      helpClicked,\n      windowSize\n    } = this.state;\n    const modalOpen = settingsClicked || helpClicked || modalInfo.length > 0;\n    const colorScheme = settings.colorScheme;\n    const boardSize = crossword.board.grid.length;\n    const baseBoardPx = windowSize < 1600 ? 630 : 630 * 1.5;\n    const boardPx = baseBoardPx % boardSize === 0 ? baseBoardPx : baseBoardPx - baseBoardPx % boardSize;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-overlay\",\n      style: {\n        display: `${modalOpen ? \"\" : \"none\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SettingsModal, {\n      shouldShow: settingsClicked,\n      settings: settings,\n      settingsSave: this.saveSettings,\n      settingsBack: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(HelpModal, {\n      shouldShow: helpClicked,\n      helpBack: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MessageModal, {\n      message: modalInfo.length > 0 ? modalInfo[0] : \"\",\n      buttonText1: modalInfo.length > 0 ? modalInfo[1] : \"\",\n      buttonAction1: this.closeModal,\n      buttonText2: modalInfo.length > 2 ? modalInfo[2] : \"\",\n      buttonAction2: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        filter: `${modalOpen ? \"blur(5px)\" : \"none\"}`\n      },\n      className: \"crossword-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn crossword-page-back-button\",\n      style: {\n        color: colorScheme.colors[3]\n      },\n      onClick: () => {\n        this.props.backSelected();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, '<', \" Save progress and go back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-heading\",\n      style: {\n        width: boardPx\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 25\n      }\n    }, crossword.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, \"By Nathan Majumder\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-page-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-settings\",\n      onClick: () => {\n        this.settingsClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: colorScheme.colors[3]\n      },\n      className: \"btn crossword-settings-button\",\n      icon: faCog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-help\",\n      onClick: () => {\n        this.helpClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: colorScheme.colors[3]\n      },\n      className: \"btn crossword-help-button\",\n      icon: faQuestionCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer-pause-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-timer-pause\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      isPaused: modalInfo.length > 0 ? true : false,\n      startingValue: crossword.board.numSeconds,\n      getValue: this.getTimerValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn crossword-pause-button\",\n      onClick: () => this.pauseClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: colorScheme.colors[3]\n      },\n      icon: faPause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-dropdowns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-check-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 40\n        }\n      }, \"Check\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'check');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.checkSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-middle\",\n      as: \"button\",\n      onClick: () => {\n        this.checkWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.checkPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-reveal-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 40\n        }\n      }, \"Reveal\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'reveal');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.revealSquareClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    }, \"Square\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-middle\",\n      as: \"button\",\n      onClick: () => {\n        this.revealWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.revealPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")), /*#__PURE__*/React.createElement(DropdownButton, {\n      id: \"crossword-clear-dropdown\",\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"#121212\",\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 40\n        }\n      }, \"Clear\"),\n      onToggle: (isOpen, event, metadata) => {\n        this.toggleDropdownVisibility(isOpen, 'clear');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-top\",\n      as: \"button\",\n      onClick: () => {\n        this.clearWordClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"crossword-dropdown-bottom\",\n      as: \"button\",\n      onClick: () => {\n        this.clearPuzzleClicked();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, \"Puzzle\")))), /*#__PURE__*/React.createElement(CrosswordBoardApp, {\n      crossword: crossword,\n      typingDisabled: modalOpen,\n      boardWidthPx: boardPx,\n      windowWidthPx: windowSize,\n      settings: settings,\n      crosswordFinished: this.crosswordFinished,\n      crosswordUnfinished: this.crosswordUnfinished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nCrosswordPage.propTypes = {\n  crossword: PropTypes.object.isRequired,\n  backSelected: PropTypes.func.isRequired\n};\nexport default CrosswordPage;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordPage.jsx"],"names":["React","Fragment","Component","Dropdown","DropdownButton","PropTypes","CrosswordBoardApp","SettingsModal","HelpModal","MessageModal","Timer","FontAwesomeIcon","faCog","faQuestionCircle","faPause","Settings","BoardStatus","api","CrosswordPage","constructor","props","modalInfos","state","crossword","savedBoard","board","settings","modalInfo","settingsClicked","helpClicked","windowSize","window","innerWidth","bind","saveSettings","closeModal","pauseClicked","crosswordFinished","crosswordUnfinished","checkSquareClicked","checkWordClicked","checkPuzzleClicked","revealSquareClicked","revealWordClicked","revealPuzzleClicked","clearWordClicked","clearPuzzleClicked","toggleDropdownVisibility","handleWindowResize","getTimerValue","saveGridState","clueClicked","boardSquareClicked","onKeyDown","componentDidMount","addEventListener","setState","componentWillUnmount","removeEventListener","render","value","numSeconds","shouldBeUpdated","console","log","response","requestSuccess","updateCrossword","id","status","error","updateBoardStatus","isOpen","which","document","getElementById","style","backgroundColor","removeProperty","checkCrosswordSquare","data","event","ctrlKey","altKey","metaKey","preventDefault","typingDisabled","CrosswordKeyActions","tabOrEnter","shiftKey","acrossClues","downClues","delete","leftArrow","upArrow","rightArrow","downArrow","gridWasFull","gridIsFull","alphaNumeric","key","toUpperCase","grid","crosswordIsComplete","clue","coords","getFirstEmptySpace","rowCoord","colCoord","selection","direction","square","modalOpen","length","colorScheme","boardSize","baseBoardPx","boardPx","display","filter","color","colors","backSelected","width","title","fontWeight","metadata","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\nimport { Dropdown, DropdownButton } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport CrosswordBoardApp from './CrosswordBoardApp.jsx'\nimport SettingsModal from './SettingsModal.jsx'\nimport HelpModal from './HelpModal.jsx'\nimport MessageModal from './MessageModal.jsx'\nimport Timer from './Timer.jsx'\nimport '../css/CrosswordPage.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog, faQuestionCircle, faPause } from '@fortawesome/free-solid-svg-icons'\nimport Settings from '../libs/Settings.js'\nimport BoardStatus from '../libs/BoardStatus.js'\nimport api from '../libs/api.js'\n\nclass CrosswordPage extends Component {\n    constructor (props) {\n        super(props)\n        this.modalInfos = {\n            \"startPuzzle\":[\"Ready to get started?\", \"Let's Go\"],\n            \"pauseManual\":[\"Your game has been paused\", \"Resume\"],\n            \"pauseInactive\":[\"Your game has been paused due to inactivity\", \"Resume\"],\n            \"puzzleCorrect\":[\"Congratulations, you've successfully solved the puzzle!\", \"Close\"],\n            \"puzzleIncorrect\":[\"Oops, there are still one or more errors to fix\", \"Close\"]\n        }\n\n        this.state = {\n            crossword: this.props.crossword,\n            savedBoard: new BoardStatus(this.props.crossword.board),\n            settings: new Settings(),\n            modalInfo: [],\n            settingsClicked: false,\n            helpClicked: false,\n            windowSize: window.innerWidth\n        }\n\n        this.settingsClicked = this.settingsClicked.bind(this)\n        this.saveSettings = this.saveSettings.bind(this)\n        this.helpClicked = this.helpClicked.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n\n        this.pauseClicked = this.pauseClicked.bind(this)\n\n        this.crosswordFinished = this.crosswordFinished.bind(this)\n        this.crosswordUnfinished = this.crosswordUnfinished.bind(this)\n\n        this.checkSquareClicked = this.checkSquareClicked.bind(this)\n        this.checkWordClicked = this.checkWordClicked.bind(this)\n        this.checkPuzzleClicked = this.checkPuzzleClicked.bind(this)\n\n        this.revealSquareClicked = this.revealSquareClicked.bind(this)\n        this.revealWordClicked = this.revealWordClicked.bind(this)\n        this.revealPuzzleClicked = this.revealPuzzleClicked.bind(this)\n\n        this.clearWordClicked = this.clearWordClicked.bind(this)\n        this.clearPuzzleClicked = this.clearPuzzleClicked.bind(this)\n\n        this.toggleDropdownVisibility = this.toggleDropdownVisibility.bind(this)\n        this.handleWindowResize = this.handleWindowResize.bind(this)\n        this.getTimerValue = this.getTimerValue.bind(this)\n        this.saveGridState = this.saveGridState.bind(this)\n\n        this.clueClicked = this.clueClicked.bind(this)\n        this.boardSquareClicked = this.boardSquareClicked.bind(this)\n\n        this.onKeyDown = this.onKeyDown.bind(this)\n\n    }\n\n    componentDidMount () {\n        window.addEventListener('resize', this.handleWindowResize)\n        window.addEventListener('beforeunload', this.saveGridState)\n        this.setState({\n            modalInfo: this.modalInfos[\"startPuzzle\"]\n        })\n    }\n\n    componentWillUnmount () {\n        window.removeEventListener('resize', this.handleWindowResize)\n        window.removeEventListener('beforeunload', this.handleWindowResize)\n    }\n\n    handleWindowResize () {\n        this.setState({\n            windowSize: window.innerWidth\n        })\n        this.render()\n    }\n\n    getTimerValue (value) {\n        this.state.crossword.board.numSeconds = value\n        if (value % 30 < 0) {\n            if (this.state.savedBoard.shouldBeUpdated(this.state.crossword.board)) {\n                this.saveGridState()\n            } else {\n                console.log(\"No need to save board, nothing has changed\")\n            }\n        }\n    }\n\n    async saveGridState () {\n        let response\n        let requestSuccess = false\n        try {\n            console.log('Saving crossword state...')\n            console.log(this.state.crossword.board)\n            response = await api.updateCrossword(this.state.crossword.id, \"ME\", this.state.crossword.board)\n            console.log(response)\n            requestSuccess = response.status === 200\n        } catch (error) {\n            requestSuccess = false\n        }\n\n        if (!requestSuccess) {\n            console.log(\"Unable to save state of crossword\")\n        } else {\n            this.state.savedBoard.updateBoardStatus(this.state.crossword.board)\n        }\n    }\n\n    crosswordFinished () {\n        this.setState({\n            modalInfo: this.modalInfos[\"puzzleCorrect\"]\n        })\n        this.render()\n    }\n\n    crosswordUnfinished () {\n        this.setState({\n            modalInfo: this.modalInfos[\"puzzleIncorrect\"]\n        })\n        this.render()\n    }\n\n    toggleDropdownVisibility (isOpen, which) {\n        if (isOpen) {\n            document.getElementById('crossword-' + which + '-dropdown').style.backgroundColor = \"#F5F5F5\";\n        } else {\n            document.getElementById('crossword-' + which + '-dropdown').style.removeProperty('background-color')\n        }\n    }\n\n    settingsClicked () {\n        this.setState({\n            settingsClicked: true\n        })\n    }\n\n    closeModal () {\n        this.setState({\n            settingsClicked: false,\n            helpClicked: false,\n            modalInfo: []\n        })\n    }\n\n    saveSettings (settings) {\n        this.setState({\n            settings: settings\n        })\n    }\n\n    helpClicked () {\n        this.setState({\n            helpClicked: true\n        })\n    }\n\n    pauseClicked () {\n        this.setState({\n            modalInfo: this.modalInfos[\"pauseManual\"]\n        })\n    }\n\n    async checkSquareClicked () {\n        let response\n        let requestSuccess = false\n        try {\n            console.log('Checking crossword square...')\n            response = await api.checkCrosswordSquare(this.state.crossword.id, \"ME\", this.state.crossword.board)\n            requestSuccess = response.status === 200\n        } catch (error) {\n            requestSuccess = false\n        }\n\n        if (!requestSuccess) {\n            console.log(\"Unable to check crossword square\")\n        } else {\n            this.setState({\n                crossword: response.data\n            })\n        }\n        console.log(this.state.crossword.board)\n        this.render()\n    }\n\n    async checkWordClicked () {\n        console.log(\"Checking a word\")\n    }\n\n    async checkPuzzleClicked () {\n        console.log(\"Checking the puzzle\")\n    }\n\n    async revealSquareClicked () {\n        console.log(\"Revealing a square\")\n    }\n\n    async revealWordClicked () {\n        console.log(\"Revealing a word\")\n    }\n\n    async revealPuzzleClicked () {\n        console.log(\"Revealing the puzzle\")\n    }\n\n    async clearWordClicked () {\n        console.log(\"Revealing a word\")\n    }\n\n    async clearPuzzleClicked () {\n        console.log(\"Clearing the puzzle\")\n    }\n\n    onKeyDown (event) {\n        console.log(event)\n        // if special key pressed, allow default action\n        if (event.ctrlKey || event.altKey || event.metaKey) {\n            return\n        }\n        event.preventDefault()\n        if (this.props.typingDisabled) {\n            return\n        }\n        let crossword = this.props.crossword\n        //let selection = this.props.currentSelection\n        if (event.which === 13 || event.which === 9) {\n            // enter or tab\n            CrosswordKeyActions.tabOrEnter(crossword.board, event.shiftKey, this.acrossClues, this.downClues)\n        } else if (event.which === 8) {\n            // delete\n            CrosswordKeyActions.delete(crossword.board)\n        } else if (event.which === 37) {\n            // left arrow\n            CrosswordKeyActions.leftArrow(crossword.board)\n        } else if (event.which === 38) {\n            // up arrow\n            CrosswordKeyActions.upArrow(crossword.board)\n        } else if (event.which === 39) {\n            // right arrow\n            CrosswordKeyActions.rightArrow(crossword.board)\n        } else if (event.which === 40) {\n            // down arrow\n            CrosswordKeyActions.downArrow(crossword.board)\n        } else {\n            let gridWasFull = CrosswordKeyActions.gridIsFull(crossword.board)\n            if (event.which >= 65 && event.which <= 90) {\n                // a to z\n                console.log(crossword.board)\n                CrosswordKeyActions.alphaNumeric(crossword.board, event.key.toUpperCase())\n                console.log(crossword.board)\n            } else if (event.which >= 48 && event.which <= 57) {\n                // 0 to 9 or the symbols on the same keys\n                CrosswordKeyActions.alphaNumeric(crossword.board, event.key)\n            } else if (event.which >= 186 && event.which <= 222) {\n                // various symbols that we want to allow in case of special themed puzzle\n                // disallow the underscore because it is reserved for black squares\n                if (event.key === \"_\") {\n                    return\n                }\n                CrosswordKeyActions.alphaNumeric(crossword.board, event.key)\n            }\n            if (CrosswordKeyActions.gridIsFull(crossword.board.grid)) {\n                this.crosswordIsComplete(!gridWasFull)\n            }\n        }\n        this.setState({\n            crossword: crossword\n        })\n        //this.saveSelection(selection)\n    }\n\n    clueClicked (clue) {\n        let coords = CrosswordKeyActions.getFirstEmptySpace(this.state.crossword.board.grid, clue)\n        if (coords === null) {\n            coords = [clue.rowCoord, clue.colCoord]\n        }\n        let crossword = this.state.crossword\n        crossword.board.selection.rowCoord = coords[0]\n        crossword.board.selection.colCoord = coords[1]\n        crossword.board.selection.direction = clue.direction\n        this.setState({\n            crossword: crossword\n        })\n        //this.saveSelection(selection)\n    }\n\n    boardSquareClicked (square) {\n        if (square.value === \"_\") {\n            return\n        }\n        let crossword = this.state.crossword\n        let selection = this.state.crossword.board.selection\n        if (square.rowCoord === selection.rowCoord && square.colCoord === selection.colCoord) {\n            crossword.board.selection.direction = selection.direction === \"Across\" ? \"Down\" : \"Across\"\n        } else {\n            crossword.board.selection.rowCoord = square.rowCoord\n            crossword.board.selection.colCoord = square.colCoord\n        }\n        this.setState({\n            crossword: crossword\n        })\n        //this.saveSelection(selection)\n    }\n\n    render () {\n        const { crossword, settings, modalInfo, settingsClicked, helpClicked, windowSize } = this.state\n        const modalOpen = settingsClicked || helpClicked || modalInfo.length > 0\n        const colorScheme = settings.colorScheme\n        const boardSize = crossword.board.grid.length\n        const baseBoardPx = windowSize < 1600 ? 630 : 630 * 1.5\n        const boardPx = baseBoardPx % boardSize === 0 ? baseBoardPx : baseBoardPx - (baseBoardPx % boardSize)\n        return (\n            <Fragment>\n                <div className=\"crossword-overlay\" style={{display: `${modalOpen ? \"\" : \"none\"}`}}></div>\n                <SettingsModal\n                    shouldShow={settingsClicked}\n                    settings={settings}\n                    settingsSave={this.saveSettings}\n                    settingsBack={this.closeModal} />\n                <HelpModal\n                    shouldShow={helpClicked}\n                    helpBack={this.closeModal} />\n                <MessageModal \n                    message={modalInfo.length > 0 ? modalInfo[0] : \"\"} \n                    buttonText1={modalInfo.length > 0 ? modalInfo[1] : \"\"} \n                    buttonAction1={this.closeModal}\n                    buttonText2={modalInfo.length > 2 ? modalInfo[2] : \"\"}\n                    buttonAction2={this.closeModal} />\n                <div style={{filter: `${modalOpen ? \"blur(5px)\" : \"none\"}`}} className=\"crossword-page-wrapper\">\n                    <div className=\"btn crossword-page-back-button\" style={{color: colorScheme.colors[3]}} onClick={() => { this.props.backSelected() }}>\n                        {'<'} Save progress and go back\n                    </div>\n                    <div className=\"crossword-page-heading\" style={{ width : boardPx }}>\n                        <div className=\"crossword-page-title\">{crossword.title}</div>\n                        <div className=\"crossword-page-author\">By Nathan Majumder</div>\n                    </div>\n                    <div className=\"crossword-page-controls\">\n                        <div className=\"crossword-settings\" onClick={() => { this.settingsClicked() }}>\n                            <FontAwesomeIcon style={{color: colorScheme.colors[3]}} className=\"btn crossword-settings-button\" icon={faCog} />\n                        </div>\n                        <div className=\"crossword-help\" onClick={() => { this.helpClicked() }}>\n                            <FontAwesomeIcon style={{color: colorScheme.colors[3]}} className=\"btn crossword-help-button\" icon={faQuestionCircle} />\n                        </div>\n                        <div className=\"crossword-timer-pause-wrapper\">\n                            <div className=\"crossword-timer-pause\">\n                                <Timer isPaused={modalInfo.length > 0 ? true : false} \n                                startingValue={crossword.board.numSeconds} \n                                getValue={this.getTimerValue}/>\n                                <div className=\"btn crossword-pause-button\" onClick={() => this.pauseClicked()}>\n                                    <FontAwesomeIcon style={{color: colorScheme.colors[3]}} icon={faPause} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"crossword-dropdowns\">\n                            <DropdownButton id=\"crossword-check-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Check</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'check') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.checkSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-middle\" as=\"button\" onClick={() => { this.checkWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.checkPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                            <DropdownButton id=\"crossword-reveal-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Reveal</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'reveal') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.revealSquareClicked() }}>Square</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-middle\" as=\"button\" onClick={() => { this.revealWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.revealPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                            <DropdownButton id=\"crossword-clear-dropdown\" \n                                title={<span style={{color: \"#121212\", fontWeight: 600}}>Clear</span>}\n                                onToggle={(isOpen, event, metadata) => { this.toggleDropdownVisibility(isOpen, 'clear') }}>\n                                <Dropdown.Item className=\"crossword-dropdown-top\" as=\"button\" onClick={() => { this.clearWordClicked() }}>Word</Dropdown.Item>\n                                <Dropdown.Item className=\"crossword-dropdown-bottom\" as=\"button\" onClick={() => { this.clearPuzzleClicked() }}>Puzzle</Dropdown.Item>\n                            </DropdownButton>\n                        </div>\n                    </div>\n                    <CrosswordBoardApp\n                        crossword={crossword} \n                        typingDisabled={modalOpen}\n                        boardWidthPx={boardPx}\n                        windowWidthPx={windowSize}\n                        settings={settings}\n                        crosswordFinished={this.crosswordFinished}\n                        crosswordUnfinished={this.crosswordUnfinished} />\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nCrosswordPage.propTypes = {\n    crossword: PropTypes.object.isRequired,\n    backSelected: PropTypes.func.isRequired\n}\n\nexport default CrosswordPage"]},"metadata":{},"sourceType":"module"}