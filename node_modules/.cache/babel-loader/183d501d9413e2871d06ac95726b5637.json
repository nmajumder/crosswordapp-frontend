{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordClueScroll.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport '../css/CrosswordBoardApp.css';\n\nclass CrosswordClueScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.topRef = React.createRef(); //this.onScroll = this.onScroll.bind(this)\n\n    this.getClueBackgroundColor = this.getClueBackgroundColor.bind(this);\n    this.getClueBorderColor = this.getClueBorderColor.bind(this);\n  }\n\n  componentDidUpdate() {\n    ReactDOM.findDOMNode(this.ref.elem).scrollTop = this.props.scrollTop;\n  }\n  /*onScroll () {\n      console.log\n      this.props.handleScroll( ReactDOM.findDOMNode( this.refs.elem ).scrollTop );\n  }*/\n\n\n  getClueBackgroundColor(clue) {\n    if (clue.number === this.props.selectedClue.number && this.props.isMatchingDirection) {\n      return this.props.settings.colorScheme.colors[2];\n    }\n\n    return \"white\";\n  }\n\n  getClueBorderColor(clue) {\n    if (clue.number === this.props.selectedClue.number) {\n      return this.props.settings.colorScheme.colors[2];\n    }\n\n    return \"white\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, this.props.listTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-scroll\",\n      ref: \"elem\",\n      onScroll: this.onScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, this.props.clueList.map((clue, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"crossword-clue-row\",\n      onClick: () => {\n        this.props.clueClicked(clue);\n      },\n      style: {\n        backgroundColor: this.getClueBackgroundColor(clue),\n        borderLeftColor: this.getClueBorderColor(clue)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, clue.number), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crossword-clue-row-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, clue.text)))));\n  }\n\n}\n\nCrosswordClueScroll.propTypes = {\n  listTitle: PropTypes.string.isRequired,\n  clueList: PropTypes.array.isRequired,\n  selectedClue: PropTypes.object.isRequired,\n  isMatchingDirection: PropTypes.bool.isRequired,\n  scrollTop: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n  clueClicked: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\nexport default CrosswordClueScroll;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordClueScroll.jsx"],"names":["React","Component","ReactDOM","PropTypes","CrosswordClueScroll","constructor","props","topRef","createRef","getClueBackgroundColor","bind","getClueBorderColor","componentDidUpdate","findDOMNode","ref","elem","scrollTop","clue","number","selectedClue","isMatchingDirection","settings","colorScheme","colors","render","listTitle","onScroll","clueList","map","i","clueClicked","backgroundColor","borderLeftColor","text","propTypes","string","isRequired","array","object","bool","func","handleScroll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport '../css/CrosswordBoardApp.css'\n\nclass CrosswordClueScroll extends Component {\n    constructor (props) {\n        super(props)\n\n        this.topRef = React.createRef()\n        //this.onScroll = this.onScroll.bind(this)\n        this.getClueBackgroundColor = this.getClueBackgroundColor.bind(this)\n        this.getClueBorderColor = this.getClueBorderColor.bind(this)\n    }\n\n    componentDidUpdate() {\n        ReactDOM.findDOMNode( this.ref.elem ).scrollTop = this.props.scrollTop;\n    }\n\n    /*onScroll () {\n        console.log\n        this.props.handleScroll( ReactDOM.findDOMNode( this.refs.elem ).scrollTop );\n    }*/\n\n    getClueBackgroundColor (clue) {\n        if (clue.number === this.props.selectedClue.number && this.props.isMatchingDirection) {\n            return this.props.settings.colorScheme.colors[2]\n        }\n        return \"white\"\n    }\n\n    getClueBorderColor (clue) {\n        if (clue.number === this.props.selectedClue.number) {\n            return this.props.settings.colorScheme.colors[2]\n        }   \n        return \"white\"\n    }\n\n    render () {\n        return (\n            <div className=\"crossword-clue-list\">\n                <div className=\"crossword-clue-list-title\">\n                    {this.props.listTitle}\n                </div>\n                <div className=\"crossword-clue-scroll\" ref=\"elem\" onScroll={this.onScroll}>\n                    {this.props.clueList.map( (clue,i) =>\n                        <div key={i} className=\"crossword-clue-row\" onClick={() => { this.props.clueClicked(clue) }}\n                            style={{backgroundColor : this.getClueBackgroundColor(clue), borderLeftColor : this.getClueBorderColor(clue)}}>\n                            <div className=\"crossword-clue-row-number\">{clue.number}</div>\n                            <div className=\"crossword-clue-row-text\">{clue.text}</div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nCrosswordClueScroll.propTypes = {\n    listTitle: PropTypes.string.isRequired,\n    clueList: PropTypes.array.isRequired,\n    selectedClue: PropTypes.object.isRequired,\n    isMatchingDirection: PropTypes.bool.isRequired,\n    scrollTop: PropTypes.func.isRequired,\n    handleScroll: PropTypes.func.isRequired,\n    clueClicked: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired\n}\n\nexport default CrosswordClueScroll\n\n"]},"metadata":{},"sourceType":"module"}