{"ast":null,"code":"var _jsxFileName = \"/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordApp.jsx\";\nimport React, { StrictMode, Component } from 'react';\nimport MiniCrosswordApp from './MiniCrosswordApp.jsx';\nimport FullCrosswordApp from './FullCrosswordApp.jsx';\nimport LoginPage from './LoginPage.jsx';\nimport '../css/CrosswordApp.css';\n\nclass CrosswordApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minisChosen: false,\n      fullsChosen: false,\n      loginOpen: true\n    };\n    this.miniPageSelected = this.miniPageSelected.bind(this);\n    this.fullPageSelected = this.fullPageSelected.bind(this);\n    this.loginClosed = this.loginClosed.bind(this);\n    this.toHomeScreen = this.toHomeScreen.bind(this);\n  }\n\n  toHomeScreen() {\n    this.setState({\n      minisChosen: false,\n      fullsChosen: false,\n      loginOpen: false\n    });\n  }\n\n  miniPageSelected() {\n    this.setState({\n      minisChosen: true\n    });\n  }\n\n  fullPageSelected() {\n    this.setState({\n      fullsChosen: true\n    });\n  }\n\n  loginClosed() {\n    this.setState({\n      loginOpen: false\n    });\n  }\n\n  render() {\n    const {\n      minisChosen,\n      fullsChosen,\n      loginOpen\n    } = this.state;\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    if (minisChosen) {\n      return /*#__PURE__*/React.createElement(MiniCrosswordApp, {\n        backSelected: this.toHomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      });\n    } else if (fullsChosen) {\n      return /*#__PURE__*/React.createElement(FullCrosswordApp, {\n        backSelected: this.toHomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-wrapper\",\n        style: {\n          width: screenWidth,\n          height: screenHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-option\",\n        onClick: () => this.fullPageSelected(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, \"Full-sized themers\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \"Work on some of the full-sized crosswords I've created, in both 15 x 15 (daily size) and 21 x 21 (Sunday size).\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-option\",\n        onClick: () => this.miniPageSelected(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"Auto-generated minis\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"crossword-app-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, \"Work on an unlimited supply of minis of varying sizes, with the fill and clues automatically generated anew each time.\"))));\n    }\n  }\n\n}\n\nCrosswordApp.propTypes = {};\nexport default CrosswordApp;","map":{"version":3,"sources":["/Users/nathanmajumder/crossword-react-app/crossword-app/src/components/CrosswordApp.jsx"],"names":["React","StrictMode","Component","MiniCrosswordApp","FullCrosswordApp","LoginPage","CrosswordApp","constructor","props","state","minisChosen","fullsChosen","loginOpen","miniPageSelected","bind","fullPageSelected","loginClosed","toHomeScreen","setState","render","screenWidth","window","innerWidth","screenHeight","innerHeight","width","height","propTypes"],"mappings":"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","sourcesContent":["import React, { StrictMode, Component } from 'react'\nimport MiniCrosswordApp from './MiniCrosswordApp.jsx'\nimport FullCrosswordApp from './FullCrosswordApp.jsx'\nimport LoginPage from './LoginPage.jsx'\nimport '../css/CrosswordApp.css'\n\nclass CrosswordApp extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            minisChosen: false,\n            fullsChosen: false,\n            loginOpen: true\n        }\n\n        this.miniPageSelected = this.miniPageSelected.bind(this)\n        this.fullPageSelected = this.fullPageSelected.bind(this)\n        this.loginClosed = this.loginClosed.bind(this)\n        this.toHomeScreen = this.toHomeScreen.bind(this)\n    }\n\n    toHomeScreen () {\n        this.setState({\n            minisChosen: false,\n            fullsChosen: false,\n            loginOpen: false\n        })\n    }\n\n    miniPageSelected () {\n        this.setState({\n            minisChosen: true\n        })\n    }\n\n    fullPageSelected () {\n        this.setState({\n            fullsChosen: true\n        })\n    }\n\n    loginClosed () {\n        this.setState({\n            loginOpen: false\n        })\n    }\n\n    render () {\n        const { minisChosen, fullsChosen, loginOpen } = this.state\n        const screenWidth = window.innerWidth\n        const screenHeight = window.innerHeight\n\n        if (minisChosen) {\n            return (<MiniCrosswordApp backSelected={this.toHomeScreen} />)\n        } else if (fullsChosen) {\n            return (<FullCrosswordApp backSelected={this.toHomeScreen} />)\n        } else {\n            return (\n                <Fragment>\n                    <div className=\"crossword-app-wrapper\" style={{width: screenWidth, height: screenHeight}}>\n                        <div className=\"crossword-app-option\" onClick={() => this.fullPageSelected()}>\n                            <div className=\"crossword-app-header\">Full-sized themers</div>\n                            <div className=\"crossword-app-body\">\n                                Work on some of the full-sized crosswords I've created, in both 15 x 15 (daily size) and 21 x 21 (Sunday size).\n                            </div>\n                        </div>\n                        <div className=\"crossword-app-option\" onClick={() => this.miniPageSelected()}>\n                            <div className=\"crossword-app-header\">Auto-generated minis</div>\n                            <div className=\"crossword-app-body\">\n                                Work on an unlimited supply of minis of varying sizes, with the fill and clues automatically generated anew each time.\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )\n        }\n    }\n}\n\nCrosswordApp.propTypes = {}\n\nexport default CrosswordApp"]},"metadata":{},"sourceType":"module"}